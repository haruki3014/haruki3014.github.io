[{"title":"02、MySQL概述","url":"/2021-07-05_MySQL-summarize.html","content":"# 关系型数据库管理系统——RDBMS\n\nMySQL是一个**关系型数据库管理系统软件**，在Web应用方面，MySQL是最好的RDBMS（Relational Database Management System，关系型数据库管理软件）应用软件，它是由瑞典MySQL AB 公司开发，目前属于Oracle旗下产品，MySQL是最流行的关系型数据库管理系统之一\n\n关系型数据库管理系统可以分为：  \n1. 关系型数据库**服务端**软件——Server\n2. 关系型数据**客户端**软件——Client\n\n```mermaid\ngraph LR\n关系型数据库管理系统的流程图\nA[用户] --用户操作--> B[数据库客户端]\nB --SQL--- C[数据库服务端]\nC --借助网络--- B\nC --> D[数据库1]\nD -->D1[数据文件1]\nD -->D2[数据文件2]\nC --> E[数据库2]\nE -->E1[数据文件1]\nE -->E2[数据文件2]\n```\n<!-- more -->  \n\n```mermaid\nsequenceDiagram\nTitle:关系型数据库管理系统的通信流程效果图\n\n数据库客户端->>数据库服务端:把数据给我\n数据库服务端->>数据库客户端:对不起我只认识SQL\n\n数据库客户端->>数据库服务端:select * from student;\n数据库服务端->>数据库客户端:返回对应的查询结果\n```\n\n# SQL 介绍\n\nSQL（Structured Query Language）是**结构化查询语言**，是一种用来操作**RDBMS**的数据库的语言。也就是说通过SQL可以操作 oracle，sql server，mysql，sqlite等关系型的数据库\n\n# SQL 语言的分类\n\n|简写|语义|说明|\n|---|---|---|\n|**DQL**<br>Query|**数据查询语言**|**select**|\n|**DML**<br>Manipulation|**数据操作语言**|**insert、update、delete**|\n|**DDL**<br>Define|**数据定义语言**|**create、drop**|\n|TPL<br>Transaction Processing Language|事物处理语言|begin transaction、commit、rollback|\n|DCL<br>Control |数据控制语言|grant、revoke|\n\n# MySQL 的特点\n\n1. MySQL 是开源的，所以不需要支付额外的费用\n2. MySQL 支持大型的数据库。可以处理拥有上千万记录的大型数据库。\n3. MySQL 使用标准的SQL数据语言形式。\n4. MySQL 可以安装在不同的操作系统上，并且提供多种编程语言的操作接口，这些编程语言包括C、C++、Python、Java、Ruby等。\n\n# 小结\n\n1. RDBMS 是关系型数据库管理软件系统，是一款软件\n2. RDBMS 的软件分2个端：服务端和客户端\n3. MySQL 数据库是RDBMS的其中一款软件\n4. MySQL 数据库软件是免费的，支持大型数据操作，跨平台，通过SQL交互","categories":["SQL -> MySQL"]},{"title":"01、数据库概述","url":"/2021-07-05_Database-overview.html","content":"# 数据库的由来\n\n|发展|说明|\n|--- |---|\n|1、人工管理阶段 |用纸带进行数据的存储|\n|2、文件系统阶段|数据存储在文件中|\n|3、数据库阶段|解决了文件系统问题|\n|4、高级数据库阶段|分布式数据库|\n<!-- more -->  \n\n# 数据库的分类\n\n|数据库分类|说明|常用库|\n|---|---|---|\n|关系型数据|采用了关系模型来组织数据的数据库；<br>**关系模型指的就是二维表格模型**|Oracle<br>Microsoft SQL Server<br>MySQL<br>SQLite|\n|非关系型数据库|Not Only SQL<br>强调 Key-Value 的方式存储数据|Mongodb<br>redis|\n\n# 关系型数据库的使用场景\n1. Web网站系统\n2. 日志记录系统\n3. 数据仓库系统\n4. 嵌入式系统\n\n# 小结\n1. 数据库发展史：绳结纸带——文件——数据库——高级数据库\n2. 数据库分类：关系型数据库和非关系型数据库\n3. 关系型数据库的使用场景","categories":["SQL -> MySQL"]},{"title":"01、马克思主义基本原理概览","url":"/2021-07-03_An-overview-of-the-fundamentals-of-marxism.html","content":"```mermaid\ngraph LR\nA[马原] ---B[哲学]\nA[马原] ---C[政治经济学]\nA[马原] ---D[科学社会主义]\nB[哲学] ---B1[哲学基本问题及不同哲学流派]\nB[哲学] ---B2[唯物论]\nB[哲学] ---B3[辩证法]\nB[哲学] ---B4[认识论]\nB[哲学] ---B5[唯物史观]\nC[政治经济学] --- C1[简单商品经济]\nC[政治经济学] --- C2[高度发的商品经济]\n```\n\n```txt\n唯物论：\n辩证法：世界是怎样的\n认识论：人如何认识世界\n唯物史观：社会规律\n```\n\n# 马克思主义哲学\n\n## 哲学基本问题的两个方面\n1. 物质和意识何者为第一性\n   1. 唯物主义\n   2. 唯心主义\n   3. 二元论（后为不彻底的唯心主义）\n2. 物质和意识具有同一性\n   1. 可知论：人的意识可以认识客观世界\n   2. 不可知论：认导意识不可以认识客观世界\n\n```txt\n第一性：先有谁后有谁的问题\n同一性：我们的精神意识能不能认识客观/外部世界\n\n唯物唯心：可知论\n二元论：不可知论\n```\n<!-- more -->  \n\n## 物质\n列宁对物质概念作了全面的科学的规定：“物质是标志客观实在的哲学范畴，这种客观实在是人通过感觉感知的，**它不依赖于我们的感觉而存在**，为我们的感觉所复写、摄影、反映。”\n\n## 意识\n意识是物质世界长期发展的产物，是人脑的机能和属性，是**物质世界的主观映象**。意识从其起源来看是自然界长期发展的产物。意识作为一种反应形式，它的形成经历了三个发展阶段，即由一切物质所具有的反应特性到低等生物的刺激感应性，再到高等动物的感觉和心理，最终发展为人类的意识\n\n```txt\n意识是人独有的\n```\n\n社会实践特别是**劳动**在意识的产生和发展中起着**决定性**的作用，劳动为意识的产生和发展提供了客观需要和可能，在人们的劳动和交往中形成的语言促进了意识的发展，语言是意识的物质外壳。\n\n```txt\n决定性：劳动\n重要/影响：语言、文字......\n```\n\n意识具有**能动**作用  \n第一，意识反应世界具有自觉性，具有目的性，具有计划性  \n第二，意识不仅反映事物的现象，而且反映事物的本质和规律  \n第三，意识具有指导实践改造客观世界的作用  \n第四，意识还具有指导、控制人的行为和生理活动的作用\n\n```txt\n人是主动的看，动物是被动的看\n意识指挥双手做事情\n```\n\n## 实践\n马克思主义认为：实践是**人类**能动地改造世界的客观物质性活动。\n\n```txt\n人类：实践的主体\n实践：物质和意识之间的桥梁，本质还是物质\n```\n\n实践的特点：  \n1. 实践是物质性的活动，具有**直接现实性**\n2. 实践是人类有意识的活动，体现了**自觉的**能动性\n3. 实践是社会的历史的活动，具有**社会历史性**的特点\n\n```txt\n直接现实性：脑中物变成现实的物\n自觉能动性：实践受意识指导\n社会历史性：以前的人砍树斧子砍一天，现在的人电锯一会就砍了\n```\n\n实践的基本形式：物质生产实践、社会政治实践和科学文化实践等。\n\n```txt\n物质生产实践：劳动\n社会政治实践：关系\n科学文华实践：探索\n```\n\n## 对立统一规律\n矛盾是反映事物内部和事物之间对立统一关系的哲学范畴。\n\n对立和统一分别体现了矛盾的两种基本属性。  \n矛盾的对立属性又称斗争性，矛盾的统一属性又称同一性。\n\n```txt\n斗争 == 对立\n同一 == 统一\n```\n\n矛盾的同一性是是指矛盾双方互相依存、相互贯通的性质和趋势。它有两个方面的含义：一是矛盾者的对立面相互依存，互为存在的前提，并共处于一个统一体中；二是矛盾者的对立面之间相互贯通，在一定条件下相互转化。\n\n矛盾的斗争性是矛盾者的对立面之间相互排斥、相互分离的性质和趋势。由于矛盾的性质不同，矛盾的斗争形式也不同，对于多种多样的斗争形式，可以区分为对抗性和非对抗性两种基本形式。\n\n```txt\n对抗性：激烈\n非对抗性：缓和\n```\n\n矛盾的同一性和矛盾的斗争性是相互联结、相辅相成的，没有斗争性就没有同一性，斗争性寓于同一性之中，没有同一性也就没有斗争性。  \n在事物的矛盾中，矛盾的斗争性是无条件的绝对的，矛盾的同一性是有条件的相对的。\n\n矛盾的同一性在事物发展中的作用表现在：第一，由于矛盾双方相互依存，互为存在的条件，矛盾双方可以利用对方的发展使自己得到发展。第二，同一性使矛盾双发相互吸取有利于自身的因素，在相互作用中各自得到发展。第三，由于矛盾双方彼此相通，矛盾双方可以向着彼此的对立面转化而得到发展，并规定着事物的发展方向。\n\n矛盾的斗争性在事物发展中的作用表现在：第一，矛盾双发的斗争促进矛盾双发力量的变化，竞长争高，此消彼长，造成事物的量变。第二，矛盾双发的斗争，促使矛盾双方的地位和性质发送转化，实现事物的质变。\n\n方法论的意义：\n1. 看问题一分为二\n2. 求同存异、和谐相处\n3. 事物的发展不仅表现为相辅相成，而且表现为相反相成\n4. ......\n\n```txt\n矛盾者同一性占主要，表现为相辅相成\n矛盾者斗争性占主要，表现为相反相成\n```\n\n## 认识的本质\n\n```txt\n批其他的主义，那么剩下的就是对的\n```\n\n唯物主义反映论与唯心主义先验论的对立\n\n在认识的本质问题上，存在着两条根本对立的认识路线：一条是坚持从物到感觉和思想的唯物主义路线，另一条是坚持从思想和感觉到物的唯心主义路线。\n\n辩证唯物主义能动反映论与旧唯物主义直观反映论的区别\n\n辩证唯物主义和旧唯物主义虽然都坚持反映论，认为认识是主体对客体的反映，但是两者之间又有着本质上的区别。旧唯物主义即形而上学唯物主义的认识论，把人的认识看成是消极地、被动地反映外界对象\n\n认识是主体在实践基础上对客体的能动反映。  \n其主要内容是：\n1. 认识是主体对客体的反映。\n2. 主体对客体的反映是一个能动的创造性的过程。\n3. 主体对客体的能动反映是以实践为中介而实现的。\n\n## 认识的过程\n从实践到认识：感性认识到理性认识的飞跃  \n**感性认识**是认识的低级阶段，是人在实践中通过感官对事物外部形态的直接的、具体的反映，它包括感觉、知觉、表象三种形式。感性认识的特点是直接性和具体性。  \n**理想认识**是认识的高级阶段，是人通过思维对事物内部联系的间接的、概括的反映。它包括概念、判断、推理以及假说和理论等形式。理性认识的特点是它的间接性和抽象性。\n\n感性认识和理性认识有着密不可分的**辩证连接**。  \n首先，感性认识和理想认识互相依存。其次，在实际的认识过程中，感性认识和理性认识又互相交织、互相渗透的。  \n一方面，感性中渗透着理想的因素。  \n另一方面，理性中渗透着感性的因素。\n\n感性认识和理性认识是辩证统一的，两者统一的基础是实践。如果割裂二者的辩证统一关系，就会走向唯理论和经验论，在实际工作中就会犯教条主义和经验主义的错误。\n\n```txt\n片面完全遵从感性：经验主义\n片面完全遵从理性：教条主义 纸上谈兵\n```\n\n## 唯物史观和唯心史观\n在马克思主义产生之前，唯心史观一直占据统治地位，它的主要缺陷：  \n一是至多观察人们活动的思想动机，而没有进一步追究思想动机背后的物质动因；  \n二是只看到个人在历史上的作用，而忽视人民群众创造历史的决定作用。\n\n```txt\n母系社会→父系社会→现代社会\n原始社会时，生产力低下，母系社会时，没有保存食物的能力，那么人们都没有私有财产，而女人可以生育，所以会有母系社会\n当发展出保存食物的技术，比如腌制，那么人们就有了私有财产，男人从生理上简单劳动力更佳占优，就不再是之前的集体依附于母系的社会\n思想启蒙、工业革命以后，生产力提升，进入现代平权社会\n```\n\n## 社会存在和社会意识的构成\n社会存在属于社会生活的物质方面，是社会实践和物质生活条件的综合，包括物质生活资料的生产以及**生产方式**、地理环境和人口因素。\n\n```txt\n社会存在：社会历史领域的物质的东西\n社会意识：社会历史领域的意识的东西\n决定性：生产方式（生产力+生产关系）\n```\n\n社会意识是社会生活的精神方面，是社会存在的反映。它包括社会意识的各种形式，也包括社会心理与自发形成的风俗、习惯。\n\n```txt\n社会心理：中国人忌讳4\n形式：包括 形态 和 非形态，有阶级就是形态，无就是非形态  如：法律、税收、艺术为形态\n艺术：带有诉求\n美术：单纯的画\n```\n\n## 社会存在和社会意识的关系\n1. 社会存在决定社会意识，社会意识是社会存在的反映，并反作用于社会存在。\n   1. 首先，社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映。\n   2. 其次，社会意识是人们进行社会物质交往的产物。\n   3. 再次，随着社会存在的发展，社会意识也相应地或迟或早地发生变化和发展\n2. 社会意识和社会存在的辩证关系的另一个方面，是社会意识具有相对独立性，它在反映社会存在的同时具有自己特有的发展形式和规律。\n   1. 首先，社会意识与社会存在发展的不完全同步性和不平衡性。\n   2. 其次，社会意识内部各种形式之间的相互影响及各自具有的历史继承性。\n   3. 最后，社会意识对社会存在的能动的反作用。\n\n## 人民群众\n人民群众是一个**历史范畴**。人民群众从质上说是指一切对社会历史发展起推动作用的人们，从量上说是指合会人口中的绝大多数。在不同的历史时代，人民群众有着不同的内容，包含着不同的阶级、阶层和集团。人民群众的最稳定的主体部分始终是从事物质资料生产的劳动群众及其知识分子。\n\n```txt\n人民群众：历史发展中起到推动作用的人，顺历史潮流\n反动派：反历史潮流\n工人、农民从事劳动的一般都是人民群众\n无党派人士：没有任何政治派别，但又有重大政治影响力的任务\n```\n\n在社会历史发展过程中，人们群众起着决定性的作用。  \n人民群众是历史的主体，是**历史的创造者**。  \n首先，人民群众是物质财富的创造者。  \n其次，人民群众是社会精神财富的创造者。  \n再次，人民群众是社会变革的决定力量。  \n最后，人民群众是先进生产力和先进文化的创造主体也是实现自身利益的根本力量。\n\n# 政治经济学\n简单商品经济：资本主义以前的商品经济，围绕着价值来衡量的  \n高度发达的商品经济：资本主义及其以后的商品经济，围绕着剩余价值\n\n## 价值是什么\n商品经济是以交换为目的而进行生产的经济形式。商品经济产生的历史条件有两个：一是社会份工的出现，二是生产资料和劳动产品属于不同的所有者。\n\n商品是用来交换的能满足人们某种需要的劳动产品，具有**使用价值**和**价值**两个因素，是使用价值和价值的矛盾统一体。\n\n使用价值是指商品能满足人们某种需要的属性，即商品的有用性，反映人与自然之间的物质关系，是商品的自然属性，是一切劳动产品共有的属性。使用价值构成社会财富的物质内容。\n\n价值是凝结在商品中的无差别的一般人类**劳动**，即人类脑力和体力的耗费。价值是商品特有的社会属性。\n\n```txt\n价值是劳动\n```\n\n商品的**价值**和**使用价值**之间的关系是对立统一的关系。  \n其**对立性**表现在：商品的使用价值和价值是相互排斥的，二者**不可兼得**  \n其**统一性**表现在：作用商品，使用价值和价值二者缺一不可\n\n```txt\n我卖一个手机给你，那么我让出了手机的使用价值，获得了手机的价值，你获得手机的使用价值，让出了手机的价值\n```\n\n## 价值如何衡量\n决定商品价值量的，不是生产商品的个别劳动时间，而是社会必要劳动时间。社会必要劳动时间是指在现有的社会正常生产条件下，在社会平均的劳动熟练程度和劳动强度下制造某种使用价值所需要的劳动时间。\n\n生产商品所需要的社会必要劳动时间随着劳动生产率的变化而变化。商品的价值量与生产商品所耗费的劳动时间成正比，与劳动生产率成反比。\n\n商品价值量是以简单劳动为尺度计量的，复杂劳动等于自乘的或多倍的简单劳动。复杂劳动转化为简单劳动，是在商品交换过程中自发实现的。\n\n## 价值如何表现\n商品的价值形式的发展经历了四个阶段：简单的或偶然的价值形式、总和的或扩大的价值形式、一般的价值形式以及货币形式。  \n商品的交换是以货币为媒介的，货币是在长期交换过程中形成的固定地充当一般等价物的商品。货币有五种基本职能，即价值尺度、流通手段、贮藏手段、支付手段和世界货币。其中价值尺度和流通手段是货币的两个最基本的职能。\n\n价值尺度：货币可以用自身的价值衡量其他商品的价值  \n原因：货币本身也是商品，也有价值  \n货币执行价值尺度的时候可以是观念的货币\n\n流通手段：货币可以充当媒介，使商品流通  \n货币执行流通手段时必须是现实的货币  \n货币执行流通手段时可以不足值，因此可以使用纸币\n\n```txt\n纸币0价值，纸币本身就不是商品，纸币不能执行价值尺度\n货币职能：价值尺度、流通手段、储藏手段、支付手段、世界货币\n```\n\n## 价值有何规律\n价值规律是商品经济的基本经济规律，它的**基本内容**和**客观要求**是：商品的价值量由生产商品的社会必要劳动时间决定，商品交换以价值量为基础，安装等价交换的原则进行。  \n价值规律的**表现形式**是商品的价格围绕其价值自发波动。\n\n```txt\n影响价格的因素有很多，如：供求、货币价值、价值\n价值是影响价格的决定性因素\n```\n\n价值规律的作用表现在：第一，自发地调节生产资料和劳动力在社会各生产部门之间的分配比例；第二，自发地刺激社会生产力的发展；第三，自发地调节社会收入分配。  \n价值规律在对经济活动进行自发调节时，必然会产生一些消极的后果。其一，可能导致垄断的发生，阻碍技术进步。其二，可能引起商品生产者的两级分化。其三，造成社会资源浪费。\n\n# 例题\n1. （单选）哲学基本问题的第一方面，即思维和存在何者为第一性的问题是\n- [x] A. 区分唯物主义与唯心主义的标准\n- [ ] B. 区分可知论与不可知论的标准\n- [ ] C. 区分辩证法和形而上学的标准\n- [ ] D. 区分唯物史观与唯心史观的标准\n\n```txt\nB：同一性\nC：世界是怎样的 能动、变化：辩证    孤立、静止：形而上学\nD：指社会存在和社会意识\n```\n\n2. （多选）下列属于物质范畴的有\n- [x] A. 钢铁\n- [x] B. 人类历史\n- [x] C. 生产力\n- [X] D. 生产关系\n3. （单选）如果不进行施工建设，图纸上的建筑物永远只会存在于图纸上，而绝不会变成现实中的高楼大厦，从哲学角度来看，是因为实践具有\n- [ ] A. 社会历史性\n- [ ] B. 客观规律性\n- [ ] C. 自觉能动性\n- [x] D. 直接现实性\n4. （多选）近年来，我国和美国国家高级领导人频频互访，共同决定建立和发展相互尊重、互利共赢的合作伙伴关系，为中美关系未来发展指明了方向。目前在国际社会的发展中，“合作共赢”越来越多地成为了各个国家的共同目标。这在辩证法上的启示是\n- [x] A. 矛盾双方在相互竞争中获得发展\n- [x] B. 矛盾一方的发展以另一方的某种发展为条件\n- [ ] C. 矛盾的一方克服另一方而使自身获得发展\n- [x] D. 矛盾双方可以相互吸引有利自身的因素而得到发展\n\n```txt\nC：不符合题意，不能克服\n```\n\n5. （单选）唯物论认为世界是物质的，物质世界是可以认识的，随着科学的发展人类将会**逐步认识和掌握全部物质世界**。唯心论认为世界是主观精神或客观精神的，精神主宰一切。唯物主义认识论和唯心主义认识论的根本区别是\n- [ ] A. 前者是可知论，后者是不可知论\n- [ ] B. 前者是直观反映论，后者是能动反映论\n- [x] C. 前者坚持从物到感觉和思想的认识路线，后者坚持从思想和感觉到物的认识路线\n- [ ] D. 前者承认认识来源于实践，后者不承认认识来源于实践\n\n```txt\nA：都为可知论。至少传统是\nB：反映论都是唯物，唯心是先验论\nD：唯心认识是意识根本没有实践\n```\n\n6. （多选）恩格斯说：“单凭观察获得的经验，是绝不能充分证明必然性的。这是如此正确，以至于不能以太阳总是在早晨升起来判断它明天会再升起来。”这句话表明\n- [x] A. 感性认识有待于上升为理性认识\n- [ ] B. 事物的必然性与感性认识无关\n- [ ] C. 对于认识事物来说，观察是没有用的\n- [x] D. 感性认识有局限性\n\n\n```txt\nB：是个因素就有关\nC：是个东西就有用\n```\n\n7. （多选）近年来，有些地区自然灾害频发，屡屡造成严重的经济社会损失，并威胁着人们的生命。下列关于社会的发展中，“地理环境”的作用描述正确的有\n- [x] A. “地理环境”属于社会存在，是社会发展的物质方面\n- [ ] B. 在影响社会发展的几个因素中，“地理环境”比“人口因素”更重要\n- [ ] C. “地理环境”已经日益成为社会发展的决定性因素\n- [x] D. “地理环境”可以从正反两面对社会发展产生影响\n\n```txt\nB：都是重要因素，就算是生产方式放进来，也只能说更高级，除非题里有故事，在故事的范围内， 说谁比谁更重要\nC：决定性只能是生产方式 比如日本、以色列地理环境不好，但发展的也不错，非洲某些土地肥沃，但也没发展好\n```\n\n8. 马克思说：“不是意识决定生活，而是生活决定意识”。作为社会存在的“社会生活”对社会意识的决定性主要表现在\n- [x] A. 社会意识的内容来源于社会生活\n- [x] B. 人们在社会物质交往过程中产生了社会意识\n- [ ] C. 社会生活发生了变化时，会立刻在社会意识中反映出来\n- [ ] D. 社会意识对社会存在具有能动的反作用\n\n```txt\nC：社会存在变化时，会或迟或早的发生变化\nD：题目是指社会存在能决定社会意识，而不是社会意识来反作用于社会存在\n```\n\n9. （多选）唯物史观第一次科学地解决了历史创造者的问题，人为人民群众是历史的创造者。人民群众\n- [x] A. 从量上说是指社会人口中的绝大多数\n- [x] B. 从质上说是指一切对社会历史发展起推动作用的人们\n- [ ] C. 在任何时期都不包括剥削阶级\n- [x] D. 最稳定的主体部分始终是从事物质资料生产的劳动群众及其知识分子\n\n```txt\nC：如封建社会时地主也是人民群众，人民群众是变化的\n```\n\n10. （单选）今年来，由于奶粉生产不达安全标志，导致婴儿使用后中毒的事件频发，消费者抵制国产奶粉的现象。这表明\n- [x] A. 使用价值是价值的物质承担者\n- [ ] B. 价值是使用价值的前提和基础\n- [ ] C. 没有使用价值也能成为商品\n- [ ] D. 没有使用价值也可以有价值\n\n```txt\nB：使用价值是价值的前提和基础 如：空气它有使用价值，但不是劳动所得，所以没有价值\nC：商品必须价值和使用价值\nD：同上\n```\n\n11. （多选）1918年，马寅初在一次演讲时，有一位老农问他：“马教授，请问什么是经济学？”马寅初笑着说：“我给这位朋友讲个故事吧：有个赶考的书生到旅店投宿，拿出十两银子，挑了该旅店标价十两银子的最好房间，店主立刻用它到隔壁的米店付了欠单，米店老板转身去屠夫处还了肉钱，屠夫马上去付清了赊欠的饲料款，饲料商赶紧到旅店还了房钱。就这样，十两银子又到了店主的手里。这时书生说，房间不合适，要回银子就走了。你看，店主一文钱没赚到，大家却把债务都还清了，所以，钱的流通越快越好，这就是经济学。”在这个故事中，货币发挥的职能由\n- [x] A. 流通手段\n- [x] B. 价值尺度\n- [x] C. 支付手段\n- [ ] D. 贮藏手段\n\n```txt\nD：无\n```\n\n12. （多选）价值规律是商品经济的第一规律，其主要内容包括\n- [x] A. 价格围绕着价值上下波动\n- [ ] B. 商品的价值由生产商品的必要劳动时间决定\n- [ ] C. 商品交换以价值量为基础，按照等价原则进行\n- [x] D. 价值规律可能造成商品生产者的两级分化\n\n```txt\nA：价值的表现形式\nD：是价值的作用\n```","categories":["政治"]},{"title":"无限容量相册","url":"/2021-06-28_Cloud-fullall.html","content":"基于：pixel/pixel xl（即pixel一代），微力同步，服务器一台（非必须，中继使用）\n","tags":["待补充","pixel","sync"],"categories":["一点儿实践"]},{"title":"附页","url":"/2021-06-23_English-1.html","content":"# 元音辅音\n* 元音：a、e、i、o、u\n* 辅音：b、c、d、f、g、h、j、k、l、m、n、p、q、r、s、t、v、w、x、y、z（除开元音的）","categories":["English"]},{"title":"01、英语词性","url":"/2021-06-23_English-part-of-speech.html","content":"定义：词性又称为词类，英语单词根据其在句中的作用，分为**十大类**\n<!-- more -->  \n\n# 名词(n.)\n* 作用：表示事务的名称\n* 分类：\n  * 专有名词：指**特定或独一无二的人或物**，表示人、地方、事物、组织等的专有名词，，第一个首字母大写。例：Mary、Jane、China\n  * 普通名词：指某类人、事物或抽象概念的名称\n    * 可数名词\n      * 个体名词：用来指单人或事物的名词。例：book、key\n      * 集体名词：用来指一群人或一些事物总称的名词。例：people、army\n    * 不可数名词\n      * 物质名词：用来表示物质的名称，包括材料、液体、气体等具体实物的名词。例：water、glass\n      * 抽象名词：用来指人或事物的品质、情感、状态、动作等抽象概念的名词。例：love、anger\n* 名词由单数变复数的基本方法\n1. 在单数名词词尾 +s。例：bag-bags、car-cars\n2. s,x,sh,ch结尾和以辅音字母+o结尾的名词 +es。例：watch-watches、potati-potatoes、tomato-tomatoes、echo-echoes、hero-heroes\n3. 以元音字母 +o 结尾，部分以辅音字母 +o 结尾的外来名词或缩写名词 +s。例：photo-photos、piano-pianos、bamboo-bamboos、zoo-zoos\n4. 以辅音字母 +y 结尾，变 y 为 i 再 +es。例：baby-babies、city-cities\n5. 以元音字母 +y 结尾， +s。例：boy-boys、toy-toys\n6. 以 f、fe 结尾，变 f、fe 为 v 再 +es。例：leaf-leaves、shelf-shelves、wife-wives\n7. 不规则变化。例：man-men、woman-women、child-children、sheep-sheep\n\n# 代词(pron.)\n* 作用：为了避免重复用来代替名词或名词词组的词\n* 补充：\n  * ","categories":["English"]},{"title":"03、列表简介","url":"/2021-06-23_List-introduction.html","content":"# 列表是什么\n类似于c的数组\n\nvim 19.py\n```python\nbicycles = ['trek','cannondale','redline','specialized']\nprint(bicycles)\n```\n```txt\n['trek', 'cannondale', 'redline', 'specialized']\n```\n<!-- more -->  \n\n## 访问列表元素\nvim 21.py\n```python\nbicycles = ['trek','cannondale','redline','specialized']\nprint(bicycles[0])\nprint(bicycles[0].title())\n```\n```txt\ntrek\nTrek\n```\n\n## 索引从0而不是1开始\nvim 22.py\n```python\nbicycles = ['trek','cannondale','redline','specialized']\nprint(bicycles[1])      #访问第二个元素\nprint(bicycles[3])      #访问第四个元素\nprint(bicycles[-1])     #访问最后一个元素\n```\n```txt\ncannondale\nspecialized\nspecialized\n```\n\n## 使用列表中的各个值\nvim 23.py\n```python\nbicycles = ['trek','cannondale','redline','specialized']\nmessage = \"My first bicycle was a \" + bicycles[1].title() + \".\"\nprint(message)\n```\n```txt\nMy first bicycle was a Cannondale.\n```\n\n# 修改、添加和删除元素\n大多数列表都是动态的，列表创建后，会随着程序的运行而增删元素。\n\n## 修改列表元素\nvim 24.py\n```python\nmotorcycles = ['honda','yamaha','suzukli']\nprint(motorcycles)\nmotorcycles[0] = 'ducati'\nprint(motorcycles)\n```\n```txt\n['honda', 'yamaha', 'suzukli']\n['ducati', 'yamaha', 'suzukli']\n```\n\n## 在列表中添加元素\n\n### 在列表末尾添加元素\n\nvim 25.py\n```python\nmotorcycles = ['honda','yamaha','suzuki']\nprint(motorcycles)\nmotorcycles.append('ducati')\nprint(motorcycles)\nmt = []\nmt.append('honda')\nmt.append('yamaha')\nmt.append('suzuki')\nprint(mt)\n```\n```txt\n['honda', 'yamaha', 'suzuki']\n['honda', 'yamaha', 'suzuki', 'ducati']\n['honda', 'yamaha', 'suzuki']\n```\n\n### 在列表中插入元素\nvim 26.py\n```python\nmotorcycles = ['honda','yamaha','suzuki']\nmotorcycles.insert(0,'ducati')\nprint(motorcycles)\n```\n```txtx\n['ducati', 'honda', 'yamaha', 'suzuki']\n```\n\n## 从列表中删除元素\n\n### 使用del语句删除元素\nvim 27.py\n```python\nmotorcycles = ['honda','yamaha','suzuki']\nprint(motorcycles)\ndel motorcycles[0]\nprint(motorcycles)\nprint(\"-----------------------------\")\nmt = ['honda','yamaha','suzuki']\nprint(mt)\ndel mt[1]\nprint(mt)\n```\n```txt\n['honda', 'yamaha', 'suzuki']\n['yamaha', 'suzuki']\n-----------------------------\n['honda', 'yamaha', 'suzuki']\n['honda', 'suzuki']\n```\n\n### 使用方法pop()删除元素\nvim 28.py\n```python\nmotorcycles = ['honda','yamaha','suzuki']\nprint(motorcycles)\npopped_motorcycle = motorcycles.pop()\nprint(motorcycles)\nprint(motorcycles.pop())\nprint(motorcycles)\nprint(popped_motorcycle)\n```\n```txt\n['honda', 'yamaha', 'suzuki']       //原列表输出\n['honda', 'yamaha']     //删除suzuki后原列表输出\nyamaha      //输出删除一项后原列表最后一项\n['honda']       //输出两次删除后的原列表\nsuzuki      //输出被赋值列表\n```\n\n### 弹出列表中任何位置处元素\nvim 29.py\n```python\nmotorcycles = ['honda','yamaha','suzuki']\nfirst_owned = motorcycles.pop(0)\nprint(\"The last motorcycle I owned was a \" + first_owned.title() + \".\")\n```\n```txt\nThe last motorcycle I owned was a Honda.\n```\n\n### 根据值删除元素\nvim 30.py\n```python\nmotorcycles = ['honda','yamaha','suzukli','ducati']\nprint(motorcycles)\nmotorcycles.remove('ducati')\nprint(motorcycles)\ndd = 'yamaha'\nmotorcycles.remove(dd)\nprint(motorcycles)\nprint(\"\\nA \" + dd.title() + \" is too expensive for me.\")\n```\n```txt\n['honda', 'yamaha', 'suzukli', 'ducati']\n['honda', 'yamaha', 'suzukli']\n['honda', 'suzukli']\n\nA Yamaha is too expensive for me.\n```\n\n# 组织列表\n创建的列表中，元素的排序应用\n\n## 使用方法sort()对列表进行永久性排序\nvim 31.py\n```python\ncars = ['bmw','audi','toyota','subaru']\ncars.sort()\nprint(cars)\ncars.sort(reverse=True)\nprint(cars)\n```\n```txt\n['audi', 'bmw', 'subaru', 'toyota']\n['toyota', 'subaru', 'bmw', 'audi']\n```\n\n## 使用函数sorted()对列表进行临时排序\nvim 32.py\n```python\ncars = ['bmw','audi','toyota','subaru']\nprint(\"Here is the original list:\")\nprint(cars)\nprint(\"\\nHere is the sorted list:\")\nprint(sorted(cars))\nprint(\"\\nHere os the original list again:\")\nprint(cars)\n```\n```txt\nHere is the original list:\n['bmw', 'audi', 'toyota', 'subaru']\n\nHere is the sorted list:\n['audi', 'bmw', 'subaru', 'toyota']\n\nHere os the original list again:\n['bmw', 'audi', 'toyota', 'subaru']\n```\n\n## 倒着打印列表\nvim 33.py\n```python\ncars = ['bmw','audi','toyota','subaru']\nprint(cars)\ncars.reverse()      #永久性的修改顺序\nprint(cars)\n```\n```txt\n['bmw', 'audi', 'toyota', 'subaru']\n['subaru', 'toyota', 'audi', 'bmw']\n```\n\n## 确定列表的长度\nvim 34.py\n```python\ncars = ['bmw','audi','toyota','subaru']\nprint(len(cars))\n```\n```txt\n4\n```\n\n# 使用列表时避免索引错误\n列表从0开始索引，-1为倒数第一个元素，列表为空-1报错","categories":["python3"]},{"title":"02、变量和简单数据类型","url":"/2021-06-22_Variables-and-simple-data-types.html","content":"# 运行hello world\nvim 1.py\n```python\nprint(\"hello Python world!\")\n```\n```txt\nhello Python world!\n```\n<!-- more -->  \n\n# 变量\nvim 2.py\n```python\nmessage = \"Hello Python world!\"\nprint(message)\n```\n```txt\nhello Python world!\n```\nvim 3.py\n```python\nmessage = \"Hello Python world!\"\nprint(message)\nmessage = \"Hello world!\"\nprint(message)\n```\n```txt\nhello Python world!\nHello world!\n```\n\n## 变量命名和使用\n* 变量名只能包含**字母、数字**和**下划线**。变量名只能是**字母**或**下划线**开头。例：message_1\n\n* 变量名不能包含**空格**，但可以使用**下划线**来分隔单词\n\n* 不能将**Python关键字**和**函数名**作为变量名使用，如：print\n\n## 使用变量时的错误\nvim 4.py\n```python\nmessage = \"Hello world!\"\nprint(mesage)\n```\n```txt\nTraceback (most recent call last):\n  File \"4.py\", line 2, in <module>      //第二行代码错误\n    print(mesage)       //列出了这个错误\nNameError: name 'mesage' is not defined     //mesage无法识别\n```\n# 字符串\n字符串就是一系列字符。在Python中，用引号括起来的都是字符串，其中的引号可以是**单引号**也可以是**双引号**\n```python\n\"This is a string.\"\n'This is also a string.\"\n```\n\n## 使用方法修改字符串大小写\nvim 5.py\n```python\nname = \"ada lovelace\"\nprint(name.title())\n```\n```txt\nAda Lovelace\n```\ntitile（）以首字母大写的方式显示每个单词，即将每个单词的首字母都改为大写。\n\nvim 6.py\n```python\nname = \"ada lovelace\"\nprint(name.title())\nprint(name.lower())\nprint(name)\n```\n```txt\nAda Lovelace\nada lovelace\nada lovelace\n```\n\n## 合并字符串\nvim 7.py\n```python\nfirst_name = \"ada\"\nlast_name = \"lovelace\"\nfull_name = first_name + \" \" + last_name\n\nprint(full_name)\nprint(\"Hello,\" + full_name + \"!\")\nmessage = \"Hello,\" + full_name.title() + \"!\"\nprint(message)\n```\n```txt\nada lovelace\nHello,ada lovelace!\nHello,Ada Lovelace!\n```\n\n## 使用制表符或换行符来添加空白\nvim 8.py\n```python\nprint(\"Python\")\nprint(\"Languages:\\nPython\\nC\\nJava\")\nprint(\"Languages:\\n\\tPython\\n\\tC\\n\\tJava\")\n```\n```txt\nPython\nLanguages:\nPython\nC\nJava\nLanguages:\n        Python\n        C\n        Java\n```\n\n## 删除空白\nvim 9.py\n```python\nfavorite_language = ' python '\nprint(favorite_language)\nprint(favorite_language.rstrip())\nprint(favorite_language.strip())\n```\n```txt\n python \n python\npython \n```\n\n## 使用字符串时避免语法错误\nvim 10.py\n```python\nmessage = 'One of Python's strengths is its diverse community.'\nprint(message)\n```\n```txt\n  File \"10.py\", line 1\n    message = 'One of Python's strengths is its diverse community.'\n                             ^\nSyntaxError: invalid syntax\n```\n\nvim 11.py\n```python\nmessage = \"One of Python's strengths is its diverse community.\"\nprint(message)\n```\n```txt\nOne of Python's strengths is its diverse community.\n```\n\n## Python 2 中的print语句\nvim 12.py\n```python\nprint \"Hello Python 2.7 World!\"\n```\n```txt\nHello Python 2.7 World!\n``` \n\n# 数字\n\n## 整数\nvim 13.py\n```python\nprint( 2 + 3 )\nprint( 3 - 2 )\nprint( 2 * 3 )\nprint( 3 / 2 )\n```\n```txt\n5\n1\n6\n1.5\n```\n\nvim 14.py\n```python\nprint( 3 ** 2 )\nprint( 3 ** 3 )\nprint( 10 ** 6 )\nprint( 2 + 3 * 4 )\nprint( ( 2 + 3 ) * 4 )\n```\n```txt\n9\n27\n1000000\n14\n20\n```\n\n## 浮点型\nvim 15.py\n```python\nprint( 0.1 + 0.1 )\nprint( 0.2 + 0.2 )\nprint( 2 * 0.1 )\nprint( 2 * 0.2 )\nprint(\"-------------------\")       #结果包含的小数可能是不确定的\nprint( 0.2 + 0.1 )\nprint( 3 * 0.1 )\n```\n```txt\n0.2\n0.4\n0.2\n0.4\n-------------------\n0.30000000000000004\n0.30000000000000004\n```\n\n## 使用函数str()避免类型错误\nvim 16.py\n```python\nage = 23\nmessage = \"Happy \" + age + \"rd Birthday!\"   #类型错误\nprint(message)\n```\n```txt\nTraceback (most recent call last):\n  File \"16.py\", line 2, in <module>\n    message = \"Happy \" + age + \"rd Birthday!\"\nTypeError: must be str, not int\n```\n\nvim 17.py\n```python\nage = 23\nmessage = \"Happy \" + str(age) + \"rd Birthday!\"\nprint(message)\n```\n```txt\nHappy 23rd Birthday!\n```\n\n## Python 2 中的整数\n与c语言类似，3/2=1而不是1.5\n\n# 注释\nvim 18.py\n```python\n# 向大家问好\nprint(\"Hello Python people!\")\n```\n```txt\nHello Python people!\n```\n\n# Python 之禅\nvim 19.py\n```python\nimport this\n```\n```txt\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n```","categories":["python3"]},{"title":"01、Python基础知识","url":"/2021-06-21_Python-Basic-knowledge.html","content":"# 运行环境\nCentOS8.2 && Python 3\n```txt\nPython 3.6.8 (default, Apr 16 2020, 01:36:27)\n[GCC 8.3.1 20191121 (Red Hat 8.3.1-5)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n```\n","categories":["python3"]},{"title":"网盘搭建","url":"/2021-01-07_Cloud-make.html","content":"# NAS\ndemo：null  \n优势：没有审查，自用隐私安全性最高\n## 群晖\n\n# 公共网盘-api-可视化\ndemo：null  \n优势：免费  \n缺点：审查机制由云存储服务商判断、隐私性最低、会河蟹某些内容\n## Onedrive-Oneindex\n\n## 和彩云/天翼云\n\n# 服务器-对象存储\ndemo：null  \n优势：没有审查,可靠性最高\n缺点：付费服务\n## seafile\n\n## nextcloud\n\n## owncloud  ","tags":["对象存储","待补充"],"categories":["一点儿实践"]},{"title":"图床\"永久链\"","url":"/2021-01-06_Img-make.html","content":"需要准备对象存储及域名，理论\"永久链\"图床，可在各云服务商或个人服务器间迁移数据  \n如果你是国外的域名，markdown是国内使用，需要绑定国内第三方dns，这里以[namesilo](https://www.namesilo.com/)域名绑定[dnspod](https://www.dnspod.cn/)为例。\n<!-- more -->  \n\n# namesilo配置(国内备案域名可跳过此步骤)\n![](https://img.xn--rhq388ct6kcjm.com/blog/cn/281BCA8978E663D1AA05423137C07932E35E89FDDDCA7A23445455A7723F219C.png)\n\n进入域名管理页面  \n将原有三个dns删除替换为以下内容，提交\n> f1g1ns1.dnspod.net  \n  f1g1ns2.dnspod.net\n\n返回域名管理页面，点击域名所在行右侧蓝色地球，进入域名解析页面，删除所有的解析内容即可。\n\n# dnspod配置\n进入dnspod管理页面，添加你的域名，点击dns刷新  \n创建公有读私有写存储桶，并复制存储桶域名  \n![添加自定义源站域名](https://img.xn--rhq388ct6kcjm.com/blog/cn/5C3AE90E330110085424836989AC2F904D961280A441B32B909654094DCFE2B2.png)\n到dnspod解析页面，添加CNAME解析  \n需要注意的是，namesilo的dns可能需要等几十分钟才会刷新，在此之前访问域名可能是到达不了存储桶的  \n![](https://img.xn--rhq388ct6kcjm.com/blog/cn/E315A71C14F3F94218BC781296F5F37A1B1996BCEF1D797ECA20A64597AFD18F.png)\n\n# ssl证书以及防盗链设置\n在dnspod或者腾讯云域名注册界面申请免费ssl证书并下载，解压。在存储桶域名绑定页面进行证书绑定，用记事本打开Nginx里的文本并复制到对应区域\n![](https://img.xn--rhq388ct6kcjm.com/blog/cn/6B12C37D45ECE58C98F26DA67CDFC60F73ADB472ECBD37D20EFC839F64BD4A39.png)\n\n测试一下，不挂t的情况下自定义域名可以访问图片，以后的迁移只需copy文件，域名重新对应一下CNAME即可，markdown文章的图片地址不需要变动。\n![](https://img.xn--rhq388ct6kcjm.com/blog/cn/4DEED59F8DC599B65736DFA4B81C4DB1C4028557408CFBA90B1691DDDE70D6EB.png)\n\n存储桶防盗链设置如下，配置完防盗链之后本地预览和网页地址栏输入是访问不了对象存储的，只有白名单内的ip才能访问  \n![](https://img.xn--rhq388ct6kcjm.com/blog/cn/358EF065F5956500257330DDE1493957881F0BD1C0294CB5E6115CDF7805CE40.png)\n\n","tags":["domain","对象存储"],"categories":["一点儿实践"]},{"title":"云函数","url":"/2021-01-05_Function-cloud.html","content":"# 前言\n[云函数简介](https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/functions.html)  \n长不看结论：总之就是跑脚本，也可以跑微信的推送等事件。目前我只用它在跑签到脚本。\n\n# server酱\n原版server酱：http://sc.ftqq.com/  \n自搭server酱：https://www.v2ex.com/t/567927\n<!-- more -->\n\n# 哔哩哔哩签到  \n项目地址：https://github.com/happy888888/BiliExp  \n油猴脚本：https://greasyfork.org/zh-CN/scripts/393096-bilibiliexp/versions  \n注意事项：云函数方式为cookie签到\n\n# 天翼云盘签到和抽奖  \n项目地址：https://github.com/FingerSword/Cloud189-Sign-In  \n注意事项：不改密码就ok  \n\n# 网易云音乐签到\n地址：https://www.coolapk.com/feed/22733317  \n注意事项：不改密码就ok  \n\n# 有道云笔记签到\n签到1.0：https://www.coolapk.com/feed/18049127\n签到2.0：https://www.coolapk.com/feed/19750209\n注意事项：均为cookie，我用qq登录的账号一天就掉了，用手机号登录的应该能管一个月","tags":["云服务","serverless"],"categories":["一点儿实践"]},{"title":"03、C#基础","url":"/2021-01-05_Csharp-base.html","content":"# C#语言及特点\n* C#是微软公司发布的一种**面向对象**的、运行于.NET Framework 和 .NET Core (完全开源，跨平台)之上的高级程序设计语言。\n* C#是一种**安全的、稳定的、简单的、优雅的**，由C和C++衍生出来的面向对象的编程语言。它在继承C和C++的强大功能的同时去掉了一些它们的复杂特性。\n* C#是**面向对象**的编程语言\n<!-- more -->  \n\n# 认识 .NET Framework / .NET Core\n```mermaid\ngraph LR\nA[.NET平台] ---B(C#语言)\nA[.NET平台] ---C(Visual Basic语言)\nA[.NET平台] ---D(C++语言)\nA[.NET平台] ---E(F#语言)\nA[.NET平台] ---F(...语言)\n```\n# Visual Studio 安装使用\nhttps://visualstudio.microsoft.com/zh-hans/downloads/\n\n# 创建第一个程序\nWindows 窗体应用（.net framwork）\n```C#\nnamespace WindowsFormsApp1\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void Label1_Click(object sender, EventArgs e)\n        {\n\n        }\n    }\n}\n```","categories":["C#"]},{"title":"域名的使用","url":"/2021-01-05_Use-domainname.html","content":"# 域名服务商\n个人站除开com、net这两个域名，其他推荐选择国外服务商进行注册。以下仅列举一些我接触过的，还有很多其他的服务商就不一一列举了  \n* 国内\n  * [阿里云万网](https://wanwang.aliyun.com/)：尚可，只提供com和net、tv、cc这四个域名的隐藏个人信息服务\n  * [华为云domain](https://www.huaweicloud.com/product/domain.html)：在企鹅和阿里中间的位置\n  * [腾讯云dnspod](https://dnspod.cloud.tencent.com/)：我目前所有com域名都在这个上面\n  * [百度云BCD](https://cloud.baidu.com/product/bcd.html)：新用户优惠不好，域名隐私里写的和实际不符\n* 国外\n  * [GoDaddy](https://sg.godaddy.com/)：全球最大的域名服务商，当然价格就...也是贵的，隐藏个人信息还要收费\n  * [namesilo](https://www.namesilo.com/)：价格便宜，比国内的稍微贵一丢丢，所有域名均支持免费whois隐藏个人信息\n\n<!-- more -->\n\n# 选购指南\n对于正常内容的网站，.com和.net选国内的就可以了，价格比国外便宜，安全性几个顶级服务商一般不会出问题，而且这两个后缀的域名默认隐藏个人信息。  \n其他的域名，比如work、link、site、me...请参考各个国内服务商的域名隐私保护指南([阿里云](https://wanwang.aliyun.com/domain/whoisprotect/)、[华为云](https://support.huaweicloud.com/domain_faq/domain_faq_0002.html)、[腾讯云](https://cloud.tencent.com/document/product/242/30404)、[百度云](https://cloud.baidu.com/doc/BCD/s/bjwvym8qn))，他们是不支持非主流域名隐藏注册人姓名和注册邮箱的，根据我的实践，腾讯和阿里的top域名，百度和腾讯的xyz域名，均不支持whois隐藏，虽然ICANN和欧盟在2018年已经要求whois查询结果不再展示域名所有者、联系邮箱等信息，但有些域名服务商对于非主流域名并没有默认隐藏。  \n这些非主流的域名，我一般作为跳转域名用，当然也可以给小网站，出于whois查询隐私考虑，这些域名最好选择国外的，好处有很多就不多说了，至少whois查询不到注册人。  \n然后是国外服务商的选择，我选择的是namesilo，因为便宜且支持隐藏个人信息，无需备案就可跳转。食用方法参考：https://zhuanlan.zhihu.com/p/33921436 。跳转指定url参考：https://www.namesilo.com/Support/Domain-Forwarding 。Google邮箱注册在移动端gmail注册即可不绑定手机，最开始的手机号只为验证是否真人。\n\n价格对比1：https://www.domain265.com/  \n价格对比2: https://namebeta.com/  \nwhois查询：https://domain.163yun.com/  \nICANN更多信息：https://www.icann.org/news/announcement-2018-05-22-zh\n\n# 域名跳转指定url方案\n方案一：github仓库跳转  \n准备：一个github账号，一个域名  \n思路：域名商那里CNAME解析到你的github域名 yourname.github.io ，github仓库内CNAME写入域名并开启github page，写入一个js加载时跳转事件即可  \n```html\n <script>window.location.href = \"域名网址\"</script>\n```\n\n方案二：对象存储跳转\n准备：能开启静态网页的对象存储，一个域名  \n思路：一级域名CNAME解析到对象存储的website域名上，存储桶只存放一个index.html，之后写入JavaScript跳转即可  \n具体步骤：  \n1. 创建一个非大陆地区的公有读私有写存储桶，推荐中国香港节点。\n2. 开启存储桶的静态网站模块，并打开安全模块中的服务器端加密。\n3. 在对象存储域名管理里填写自定义源站域名，在dnspod中添加对应CNAME解析，并上传对应证书密钥到源站上。\n4. 对象存储上传一个index.html文件，写入以下代码\n```html\n <script>window.location.href = \"域名网址\"</script>\n```","tags":["domain","dns"],"categories":["一点儿实践"]},{"title":"04、了解文件系统的和基本操作","url":"/2021-01-04_Understand-the-file-system-and-basic-operations.html","content":"# 学习目标\n\n- 描述分件系统重要的组成部分\n- 复制，移动和删除文件\n- 创建文件和文件夹\n- 了解时间戳的概念\n\n# Linux文件系统的组成\n\n整个文件系统由 分区--目录 对接  \n文件都是从根开始的，无论文件在哪个分区，都可以通过根访问到  \n\n- 文件和目录构成单根的倒树状结构\n- 文件系统从根目录开始，表示为一个单独的’/’(斜线)字符\n- 命名大小写敏感\n- 路径以’/’为分隔\n\n```mermaid\n\tgraph TD\n\tA(/)---B1(bin)\n\tA---B2(boot)\n\tA---B3(dev)\n\tA---B4(etc)\n\tA---B5(home)\n\t\tB5---D1(alice)\n\t\tB5---D2(bob)\n\t\tB5---D3(eve)\n\tA---B6(root)\n\tA---B7(run)\n\tA---B8(sbin)\n\tA---B9(tmp)\n\tA---B10(usr)\n\t\tB10---D4(bin)\n\t\tB10---D5(local)\n\t\tB10---D6(sbin)\n\t\tB10---D7(tmp)\t\t\n\tA---B11(var)\n\t\tB11---D8(tmp)\n```\n<!-- more -->  \n\n**执行命令：ls -la；显示白色是文件，蓝色是目录**  \n\n| d    | r-xr-x---. | 15 | root | root  | 4096   | Jul  3 04:43  | .  |\n| ---- | -- | --- | --- | ------ | ---- | ----- | ------ |\n| 文件 | 权限 | 文件:链接数/目录:子目录数 | 拥有人 | 拥有组 | 文件大小（默认字节） | 最后一次修改时间 | 文件名 |\n\n# 基本目录  \n1. **/：根目录**，位于Linux文件系统目录结构的顶层，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中。 \n2. **/bin，/usr/bin：这两个目录为命令文件目录**，也称为二进制目录。包含了供系统管理员及普通用户使用的重要的linux命令和二进制（可执行）文件，包含shell解释器等。在linux 7或者更高的版本中，/bin和/usr/bin，/sbin和/usr/sbin，/lib和/usr/lib、lib64和/usr/lib64中，/中的目录是/usr/中对应目录软链接。相当于win的快捷方式 访问/bin和/usr/bin是一样的\n3. **/boot： 该目录中存放系统的内核文件和引导装载程序文件**，/boot/vmlinuz为linux的内核文件，以及/boot/gurb。一般情况下都是单独分区，分区大小200M即可。\n4. **/dev： 设备（device）文件目录**，存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，存放连接到计算机上的设备（终端、磁盘驱动器、光驱及网卡等）的对应文件，包括字符设备和块设备等，常用的是挂载光驱： **mount /dev/cdrom  /mnt。** \n5. **/etc： 系统配置文件存放的目录**，该目录存放系统的大部分配置文件和子目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11（X Window系统有关）、/etc/sysconfig（与网络有关）、/etc/xinetd.d等等，修改配置文件之前记得备份。该目录下的文件由系统管理员来使用，普通用户对大部分文件有只读权限。\n6. **/home： 系统默认的用户宿主目录**，新增用户账号时，用户的宿主目录都存放在此目录下，表示当前用户的宿主目录，test表示用户test的宿主目录。如果做文件服务器，建议单独分区，并设置较大的磁盘空间，方便用户存放数据。用户传上来的数据和其他系统文件隔离，安全性高些！\n7. **/lib，/usr/lib，/usr/local/lib：系统使用的函数库的目录**，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，该目录下存放了各种编程语言库。典型的linux系统包含了C、C++和FORTRAN语言的库文件。/lib目录下的库映像文件可以用来启动系统并执行一些命令，目录/lib/modules包含了可加载的内核模块，/lib目录存放了所有重要的库文件，其他的库文件则大部分存放在/usr/lib目录下。\n8. **/mnt，/media： mnt目录主要用来临时挂载文件系统，为某些设备提供默认挂载点，如cdrom**。这样当挂载了一个设备如光驱时，就可以通过访问目录/mnt下的文件来访问相应的光驱上的文件了。\n9. **/opt： 给主机额外安装软件所摆放的目录**。如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下。\n10. **/proc： 此目录的数据都在内存中**，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/\\*等。\n11. **/root：系统管理员root的宿主目录**，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。\n12. **/sbin，/usr/sbin，/usr/local/sbin：放置系统管理员使用的可执行命令**，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能\"查看\"而不能设置和使用。\n13. **/tmp： 一般用户或正在执行的程序临时存放文件的目录**,任何人都可以访问,重要数据不可放置在此目录下。\n14. **/srv： 服务启动之后需要访问的数据目录**，如www服务需要访问的网页数据存放在/srv/www内。\n15. **/usr： 应用程序存放目录**，/usr/bin 存放应用程序， /usr/share 存放共享数据，/usr/lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件，/usr/local 存放软件升级包，/usr/share/doc 系统说明文件存放目录。\n16. **/usr/share/man:程序说明文件存放目录**，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容，建议单独分区，设置较大的磁盘空间。\n17. **/var： 放置系统执行过程中经常变化的文件，如随时更改的日志文件** /var/log。/var/log/message： 所有的登录文件存放目录。/var/spool/mail： 邮件存放的目录。建议单独分区，设置较大的磁盘空间。\n18. **/run**：目录中存放的是自系统启动以来描述系统信息的文件\n19. **/sys**： 挂载点上挂载sysfs 虚拟文件系统，我们可以通过sysfs 文件系统访问 Linux 内核\n\n# 重要目录  \n**/etc：这个目录相当重要**，如前所述，你的开机与系统数据文件均在这个目录之下，因此当这个目录被破坏，那你的系统大概也就差不多该死掉了！而在往后的文件中，你会发现我们常常使用这个目录下的 /etc/rc.d/init.d 这个子目录，因为这个 init.d 子目录是开启一些 Linux 系统服务的 scripts 的地方。而在 /etc/rc.d/rc.local 这个文件是开机的执行档。  \n**/bin, /sbin, /usr/bin, /usr/sbin：这是系统预设的执行文件的放置目录**，例如 root 常常使用的 userconf, netconf, perl, gcc, c++ 等等的数据都放在这几个目录中，所以如果你在提示字符下找不到某个执行档时，可以在这四个目录中查一查！其中， /bin, /usr/bin 是给系统使用者使用的指令，而 /sbin, /usr/sbin 则是给系统管理员使用的指令！   \n**/usr/local：这是系统预设的让你安装你后来升级的套件的目录**。例如，当你发现有更新的 Web 套件（如 Apache ）可以安装，而你又不想以 rpm 的方式升级你的套件，则你可以将 apache 这个套件安装在 /usr/local 底下。安装在这里有个好处，因为目前大家的系统都是差不多的，所以如果你的系统要让别人接管的话，也比较容易上手！也比较容易找的到数据！因此，如果你有需要的话，通常都会将 /usr/local/bin 这个路径加到 path 中。  \n**/home：这个是系统将有账号的人口的家目录设置的地方。** 　  \n**/var：这个路径就重要了！不论是登入、各类服务的问题发生时的记录、以及常态性的服务记录等等的记录目录**，所以当你的系统有问题时，就需要来这个目录记录的文件数据中察看问题的所在！而 mail 的预设放置也是在这里，所以他是很重要的 。   \n**/usr/share/man, /usr/local/man： 这两个目录为放置各类套件说明档的地方**，例如你如果执行 man man，则系统会自动去找这两个目录下的所有说明文件。  \n\n# 一些常用文件目录\n\n**用户账号文件：/etc/passwd**\n\n|字段1|字段2|字段3|字段4|字段5|字段6|字段7|\n|---|---|---|---|---|---|---|\n|user01|x:|1000:|1000:|User One:|/home/user01|/bin/bash|\n|用户名称|密码占位符“x”(表示登录该用户时需要密码，红帽8去掉也需要密码）|用户帐号的UID号| 用户的私有组|用户描述信息|用户的主目录|登录Shell信息|\n\n**密码文件：/etc/shadow**\n\n| 字段1 | 字段2 | 字段3 | 字段4 | 字段5 | 字段6 | 字段7 | 字段8 | 字段9 |\n| ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |\n|user03|\\$6\\$CSsx...output omitted...:|17933|0|99999:|7|2|18113||\n|用户帐号的名称|加密的密码字串信息|最近一次修改密码的时间，表示从1970.01.01至今的天数|密码的最短使用天数，默认值为0，没有要求|密码的最长有效天数，默认值为99999|密码即将到期警告天数，默认值为7|在密码过期之后账号保持活动的天数，指定天数后账号被锁定，成为无效|帐号失效时间，默认值为空，以1970.01.01的天数表示|保留字段（未使用）|\n\n**组信息文件：/etc/group**\n\n| 字段1 | 字段2 | 字段3 | 字段4 |\n| ----- | ----- | ----- | ----- |\n|组的名称|密码占位符“x”|组的ID号|该组是user1，user2和user3的附加组|\n\n# 文件和目录名\n\n**名字不能多于255个字符**\n**所有字符都要求是有效的，除斜线(/)之外**\n不要使用某些特殊的字符在文件或者目录名中\n当文件名中有特殊字符时应用引号保护引起来\n**命名和大小写敏感**\n例如:MAIL,Mail,mail和mAiL\n\n# 绝对路径和相对路径\n\n**绝对路径：**  \n以根开头的路径  \n文件位置的全路径  \n在任何位置都可以引用  \n**相对路径：**  \n不以斜线开头  \n当前工作目录的相对位置  \n在特定的位置才可以引用\n\n\n# 管理文件和目录的基本命令\n\n**ls**：显示当前目录或者指定目录下的内容  \n使用  \nls [options] [files or dirs]\n示例  \nls -a (包括隐藏文件)  \nls -l (显示扩展信息)  \nls -R(递归所有的目录)  \nls -ld (显示目录和符号链接信息)\n\n**mkdir**：\n1. 命令格式  \nmkdir [-选项] 目录...\n2. 命令功能  \n通过 mkdir 命令可以实现在指定位置创建指定的文件名的文件夹。**要创建文件夹的用户必须对所创建的文件夹的父文件夹具有写权限**。并且，所创建的文件夹不能与其父目录中的已经存在文件重名，即同一个目录下不能有同名的(区分大小写)。 \n3. 命令参数  \n -p, --parents 可以是一个路径名称。**此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录**,即一次可以建立多个目录;   \n-v, --verbose 每次创建新目录都显示信息\n\n**pwd**：显示当前所在的目录的绝对路径\n\n**cd**：改变目录  \n改变到一个绝对或者相对路径  \ncd /home/joshua/work；cd project/docs\n改变到上层目录  \ncd ..  \n改变目录到上一个工作目录  \ncd -  \n改变到当前用户的主目录  \ncd 或者cd ~  \n改变到某个用户的主目录  \ncd  ~username\n\n**rmdir**：删除空目录\n\n**cp**：命令主要用于复制文件或目录  \n cp [options] source... directory  \n l -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。  \n l -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。\n\n**mv**:命令用来为文件或目录改名、或将文件或目录移入其它位置。  \n mv source... directory\n\n**rm**：命令用于删除一个文件或者目录。  \n rm [options] name...  \n l -f 即使文件属性设为只读，也直接删除，无需逐一确认。  \n l -r 将目录及以下之文件一起删除。  \n rm -rf * 删除当前目录下的所有文件及目录\n\n**touch**：命令用于修改文件或者目录的时间属性。若文件不存在，系统会建立一个新的文件。  \n命令格式：touch  文件名\n\n**cat**：命令用显示文件内容。\n\n**命令格式**：cat [-选项] 文件  \n加参数：-n 或 --number：由 1 开始对所有输出的行数编号。\n\n**more**：命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示  \nl Enter 向下n行，需要定义。默认为1行  \nl 空格键 向下滚动一屏  \nl q 退出more\n\n**less**：工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。  \n1. 命令格式\nless [-选项] 文件 \n2. 命令功能\nless 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。  \n/ 字符串：向下搜索“字符串”的功能  \n? 字符串：向上搜索“字符串”的功能  \nn：重复前一个搜索（与 / 或 ? 有关），next  \nN：反向重复前一个搜索（与 / 或 ? 有关）  \nQ 退出less 命令  \nEnter 向下n行，需要定义。默认为1行  \n空格键 向下滚动一屏  \nb键 向上滚动一屏  \n[pagedown]： 向下翻动一行  \n[pageup]：  向上翻动一行  \n\n**head (head)**：用来显示档案的开头至标准输出中。如果指定了多于一个文件，在每一段输出前会给出文件名作为文件头。  \nhead -n 5 log.txt ；说明：显示文件的前n行\n\n**tail**：命令用途是依照要求将指定的文件的最后部分输出  \n1. tail filename\n说明：显示filename最后10行。\n2. tail -F filename\n说明：动态监视filename文件的尾部内容（默认10行，相当于增加参数 -n 10），刷新显示在屏幕上。退出，按下CTRL+C。\n3. tail -n 20 filename\n说明：显示filename最后20行。\n\n**file查看文件类型**：查看文件类型  \n文件可以包含许多类型的数据  \n在文件打开之前先检查文件类型，然后再确定使用适当的命令或者应用程序  \nfile [options] <filename>…\n\n**tree**：可以查看当前目录下的所有子目录和文件结构\n\n# 单元小结\n\n- Linux 文件系统层次结构\n- 命令行文件管理工具\n- 时间戳\n","categories":["Linux -> RHEL8"]},{"title":"03、运行命令和获取帮助","url":"/2021-01-03_Run-commands-and-get-help.html","content":"# 学习目标\n\n- 在提示符下执行命令\n- 掌握命令的语法\n- 学习使用一些简单命令\n- 学会使用系统内部的一些帮助\n- 学会使用red hat的在线文档\n\n# 命令的语法\n\n  command options arguments   \n- 项与项之间以空格分隔开\n- options修饰一个命令的行为\n\t- 单个字母作为选项前一般都带有-,例如-a,-b,-c或者-abc\n\t- 单词作为选项前通常带有--,例如:--help\n- 参数是一个文件名目录或者具体的某个对象\n- 多个命令用;分隔 \n\n| 命令      | 选项         | 参数            |\n| -------------- | -------------- | --------------- |\n| 做什么，如：passwd、ls、id | 修饰命令的行为（功能），如：-a、-l、-la | 具体的某个对象 |\n<!-- more -->  \n\n# 获取帮助\n\n不要去尝试记住一切，不同级别的帮助资源： whatis、 command --help、 man、pinfo、 /usr/share/doc、 红帽官方产品文档 \n\n**whatis命令**  \n- 显示命令的简短描述\n- 基于数据库的查询，定时更新\n- 在安装完后并不能马上使用\n\n**--help命令**  \n- 列出命令常用的语法和参数\n- 大部分命令支持该选项\n- 特殊符号解读\n\t- 在[]中的参数是可选的\n\t- 大写的参数或者在<>中都表示变量\n\t- 文本后面跟随…表示一个列表\n\t- x|y|z表示”x 或者y或者z”\n\t* -abc表示”任意-a,-b或者-c的任意组合”\n- 例如：date --help\n\n**man使用方法：**  \n   man -k 关键字\n   man [章节信息] 命令或者配置文件 \n\n| 命令            | 结果                       |\n| --------------- | -------------------------- |\n| 空格键          | 向下翻页                   |\n| PageUp/PageDown | 向上向下翻页               |\n| g/G             | 回到开头/末尾              |\n| /string         | 搜索string关键词           |\n| n/N             | 在关键词之间向下和向上查找 |\n| q               | 退出man帮助页面            |\n\n**帮助手册（manual）**  \n位置：/usr/share/man/；man手册标准章节，常用选项：1、用户命令；5、文件格式；8、系统管理命令 \n\n| 章节 | Ecglish               | 中文                 |\n| :---:| --------------------- | ------------------------------ |\n| 1    | User commands         | 用户命令                           |\n| 2    | System calls          | 系统调用库                  |\n| 3    | Library functions     | 库函数                          |\n| 4    | Special files         | 特殊文件                        |\n| 5    | File formats          | 文件格式                           |\n| 6    | Games                 | 游戏                          |\n| 7    | Conventions           | 约定                          |\n| 8    | Manintenance commands | 系统管理命令（一般只有root能执行的命令） |\n| 9    | Linux Kernel API      | Linux内核 API                |\n\n**pinfo帮助文档**   \n- 文档结构由超链接式的 info 节点组成，记录了很多复杂命令和概念说明\n- 在 RHEL 中可以使用 info 和 pinfo 两个命令浏览 info page \n\n| 命令操作          | 结果                        |\n| ------------------ | --------------------------- |\n| PageUp或者b        | 向上滚动一个屏幕            |\n| PageDown或者空格键 | 向下滚动一个屏幕            |\n| d                  | 显示主题目录                |\n| u                  | 显示主题的父节点            |\n| 向上/向下箭头键    | 向上/向下滚动到下一个超链接 |\n| enter键            | 打开光标处的主题            |\n| q                  | 打开光标处的主题            |\n\n**RPM包文档**  \n本地帮助文档\n安装软件包后，在doc目录下释放文档\n/usr/share/doc/pa\n可使用浏览器查看\n\n**redhat在线文档**  \n红帽官方文档 https://access.redhat.com\n\n# 单元小结\n\n- 命令的语法规则\n- man帮助使用\n- 系统内其他帮助资源\n- 红帽在线文档查阅","categories":["Linux -> RHEL8"]},{"title":"02、Linux的基本使用","url":"/2021-01-02_Linux-Basic-use.html","content":"# 学习目标\n\n- 登录Red Hat Enterprise Linux系统\n- 从控制台启动图形\n- 执行简单的linux命令\n- 编辑纯文本文件\n- 掌握root特性\n\n# 简单的命令\n\n| 命令    | 功能             |\n| ------- | ---------------- |\n| date    | 显示日期         |\n| cal     | 显示日历         |\n| passwd  | 修改密码         |\n| id      | 显示当前用户信息 |\n| useradd | 创建用户         |\n| su -    | 切换用户         |\n| vim     | 文本编辑器的使用 |\n<!-- more -->  \n\n# 历史记录（history）\n\n| 操作      | 功能                           |\n| --------- | ------------------------------ |\n| History   | 查看所有历史记录               |\n| history N | 列出最近的N条历史记录          |\n| !N        | 调用第N条历史记录              |\n| !string   | 调用最近一条以string开头的命令 |\n| !$        | 调用最后一条命令               |\n| 上下键    | 查找历史记录                   |\n| Ctrl+r    | 搜索历史记录                   |\n| Alt+.     | 调用上一条命令的最后一个参数   |\n| Esc+.     | 调用上一条命令的最后一个参数   |\n\n# 图形界面\n\n如果最开始没有装GUI图形界面，还需要装X-window，有两种桌面工具 GNOME和KDE  \n控制台（以前）：键盘、鼠标、显示器等硬件  \n控制台（现在）：即命令行、图形界面等操作界面\n\n- 典型的Linux系统运行5个虚拟控制台和1个图形控制台\n- 按CTRL-ALT-F1键可进入图形控制台\n- 使用CTRL-ALT-F[2-6]键可切换不同虚拟控制台\n- 在虚拟控制台执行startx可以运行图形，前提是装了图形界面（startx没有切换控制台，只是在当前\n- 控制台开启了图形应用程序）\n\n# gnome-terminal桌面工具\n\n| 操作            | 功能        |\n| --------------- | ---------------- |\n| Ctrl-Shift-t    | 创建标签页       |\n| Ctrl-PgUp/PgDn  | 在标签页之间切换 |\n| Alt+[123...]    | 在标签页之间切换 |\n| Ctrl-Shift-c    | 复制已选内容     |\n| Ctrl-Shift-v    | 粘贴复制的内容   |\n| Shift-PgUp/PgDn | 在标签页上下滚动 |\n| Ctrl+l          | 清屏             |\n| Ctrl+Shift++    | 放大\t|\n| Ctrl+-          | 缩小\t|\n\n# 单元小结\n\n- 登录操作系统\n- 掌握桌面图形工具的使用\n- root用户的本质\n- 一些简单命令的执行\n- tab的使用\n- 历史记录的调用","categories":["Linux -> RHEL8"]},{"title":"01、Linux的简介和安装","url":"/2021-01-01_Linux-introduction-and-installation.html","content":"# 学习目标\n\n- Linux系统和红帽认证的基本介绍\n- RHEL8.0系统的安装\n- 掌握开源软件的本质\n- 探讨linux的起源\n- Red Hat操作系统的发行版\n- 其他Linux系统的发行版\n- 了解linux的基本原理\n\n# linux系统安装\n\nCentOS下载：https://www.centos.org/download/  \nDVD ISO：标准安装版，一般下载这个就可以了（推荐）  \nEverything ISO：对完整版安装盘的软件进行补充，集成所有软件。（包含一套完整的软件包，可以用来安装系统或者填充本地镜像）  \nMinimal ISO：迷你版，小巧、安装快速、自带的软件少  \nCentOS所有历史版本的下载地址：http://archive.kernel.org/centos-vault/\n[rhel8安装手册](https://www.lofter.com/lpost/4ba01091_1cabbd565)\n<!-- more -->  \n\n# 什么是操作系统？\n\n操作系统，英文名称Operating System，简称OS，是计算机系统中必不可少的基础系统软件，它是应用程序运行以及用户操作必备的基础环境支撑，是计算机系统的核心。  \n\n![操作系统与计算机硬件软件关系](https://img.xn--rhq388ct6kcjm.com/linux/rhel8/96F0C320ADD182842FBA7D0D28146A5183660388D3149919CAB5C0163FAC9C5A.png)\n\n# 什么是Linux？\n\n和Windows操作系统软件一样，Linux也是一个操作系统软件。  \nLinux内核最初只是由芬兰人李纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。  \nLinux是一套免费使用和自由传播的，是一个基于POSIX（POSIX表示可移植操作系统接口，是个标准）的多用户、多任务、支持多线程和多CPU的操作系统。 \n\n**Linux的内核版本和发行版本**  \n内核版本下载地址：https://www.kernel.org/ ，只有99M多一点是Linux操作系统的真正的核心。  \nLinux的发行版说简单点就是将Linux内核与应用软件做一个打包。  \n目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、TurboLinux、BluePoint、RedFlag、Xterm、SlackWare等很多很多，发行版本可能有上千种之多，各个发行版本之间的主要区别就是安装软件的方式可能不同，其他主要的操作命令啊什么的基本雷同，因为都是一个内核。  \n\n**Linux应用领域**  \n物联网、云计算、大数据使用的嵌入式、c++、JAVA、PHP等底层应用软件都是在Linux操作系统上,各种场合都有使用各种Linux发行版，通常服务器使用Linux，未来国产化服务器都是安装的Linux操作系统。\n\n**Linux发展史**  \n- **1984年**，Richard Stallman发起了GNU源代码开放计划并制定了著名的GPL许可协议。\n- **1987年**，GNU计划获得了一项重大突破—gcc编译器发布\n- **1991年10月**，芬兰赫尔辛基大学的在校生Linus Torvalds编写了一款名为Linux的操作系统。该系统因其较高的代码质量且基于GNU GPL许可协议的开放源代码特性，迅速得到了GNU计划和一大批黑客程序员的支持。\n- **1994年1月**，Bob Young在Linux系统内核的基础之上，集成了众多的源代码和程序软件，发布了红帽系统并开始出售技术服务，这进一步推动了Linux系统的普及。\n- **2020年3月**，Linux内核已经发展到了5.6版本，并且Linux系统版本也有数百个之多，但它们依然都使用Linus Torvalds开发、维护的Linux系统内核。RedHat公司也成为了开源行业及Linux系统的带头公司\n\n**发展历程**  \n- **Unix**：1970年1月1日 贝尔实验室 开源→闭源，Richard Stallman发起了GNU：GNU is not unix 计划 开源\n- **Linux**：1991年 unix架构 最早为内核kernel 控制硬件，硬件←→kernel←→应用程序，1991年 内核 1.0v版本—5.6v版本 红帽是外层操作系统  GNU/Linux\n\n**红帽发行版本**  \nLinux分发是基于linux内核的操作系统  \n- **Red Hat Enterprise Linux**（红帽企业版 Linux） 企业版\n\t* 应用程序和功能更稳定\n\t* 有专业的技术支持服务\n- **Fedora**（费多拉） 桌面 个人 图形界面 功能新 不稳定应用更多，功能更新\n\t* 社区支持(不提供Red Hat官方支持)\n\t* 针对个人的操作系统\n- **Centos**（社区企业操作系统） community ent：enterprise os 社区企业版 没有服务 需要运维人员\n\t* 社区企业操作系统\n\t* 基于Red Hat Enterprise Linux开发\n\t* 完全免费，但不提供任何商业支持\n\n**红帽公司**  \n- 红帽RedHat：开源界的领导者 纯软件公司  但2019年被IBM收购了\n- IBM：闭源 硬件——软件一体 自身兼容性好 云\n\n# 什么是开源软件？\n\n开源软件：软件的源代码共享给所有人\n\n**自由软件基金会定义了四大自由：**  \n- 允许以任何目的运行软件\n- 允许学习和修改软件的源代码\n- 允许重新发布软件\n- 允许开发软件的衍生版本\n\n**开源软件对比闭源软件的优势**  \n- **低风险**：使用闭源软件无疑把命运交付给他人，一旦封闭的源代码没有人来维护，你将进退维谷；而且相较于商业软件公司，开源社区很少存在倒闭的问题。\n- **低成本**：开源工作者都是在幕后默默且无偿地付出劳动成果，为美好的世界贡献一份力量，因此使用开源社区推动的软件项目可以节省大量的人力、物力和财力。\n- **高品质**：相较于闭源软件产品，开源项目通常是由开源社区来研发及维护的，参与编写、维护、测试的用户量众多，bug修复及时。\n- **更透明**：没有哪个会把木马、后门等放到开放的源代码中，这样无疑是把自己的罪行暴露在阳光之下。\n\n# Linux基本准则\n\n- 一切都是文件(包括硬件)\n- 小而功能单一的应用程序\n- 组合多个程序一起执行复杂的任务\n- 跟用户操作界面无关\n- 以文本文件形式保存配置数据\n\n# 单元小结\n  \n- RHEL8.0系统安装\n- 开源软件\n- Linux的起源\n- 红帽的各个发行版\n- Linux的基本原则\n","categories":["Linux -> RHEL8"]},{"title":"hexo-next7食用方法","url":"/2020-12-21_Use-hexo-next7.html","content":"# 博客启用（前略环境搭建）\n新建文件夹，之后在其中执行：hexo init。\nhexo-next7官方git：https://github.com/theme-next/hexo-theme-next\nhexo-next8官方git：https://github.com/next-theme/hexo-theme-next\ngit配置：npm install --save hexo-deployer-git；多用户指定其一：githubgit config --global user.email \"邮箱\"和git config --global user.name \"用户名\"\n<!-- more -->\n\n\n# 可能会用到的工具\n\nRSS订阅：npm install hexo-generator-feed；  \n参考：https://blog.csdn.net/qq_36537546/article/details/90730068  \n站点地图：npm install hexo-generator-sitemap --save；  \n参考：https://www.cnblogs.com/brady-wang/p/8493181.html  \nnext7的搜索功能：npm install hexo-generator-searchdb --save；  \n参考：https://blog.csdn.net/qq_41086511/article/details/103537522  \n背景图片及透明度调整：\\themes\\next-7.7.2\\source\\css\\_common\\components\\pages\\pages.styl，能找到此页面样式文件的均可。  \n参考：https://blog.csdn.net/Louis_li51/article/details/105227430；  \n注：带搜索框后不能开启菜单栏和搜索栏的透明度，否则会透明度过高看不清，但可以给头像的框加透明度。   \nnext7单独友链参考：https://blog.csdn.net/Aoman_Hao/article/details/103758829  \n文章置顶：node_modules/hexo-generator-index/lib/generator；\n参考：https://www.jianshu.com/p/42a4efcdf8d7  \n图片压缩工具：https://tinypng.com/ 或者https://docsmall.com/image-compress  \n图片批量重命名工具（可为图片hash值）：[ReNamer](https://renamer.en.softonic.com/)  ","categories":["一点儿实践"]}]