[{"title":"图床\"永久链\"","url":"/2021-01-06_img-make.html","content":"&#8195;&#8195;需要准备对象存储及域名，理论\"永久链\"图床，可在各云服务商或个人服务器间迁移数据  \n&#8195;&#8195;如果你是国外的域名，markdown是国内使用，需要绑定国内第三方dns，这里以[namesilo](https://www.namesilo.com/)域名绑定[dnspod](https://www.dnspod.cn/)为例。\n<!-- more -->  \n\n# namesilo配置(国内备案域名可跳过此步骤)\n![](https://bika.picacg.download/haruki/281BCA8978E663D1AA05423137C07932E35E89FDDDCA7A23445455A7723F219C.png)\n\n进入域名管理页面  \n将原有三个dns删除替换为以下内容，提交\n> f1g1ns1.dnspod.net  \n  f1g1ns2.dnspod.net\n\n返回域名管理页面，点击域名所在行右侧蓝色地球，进入域名解析页面，删除所有的解析内容即可。\n\n# dnspod配置\n进入dnspod管理页面，添加你的域名，点击dns刷新  \n创建公有读私有写存储桶，并复制存储桶域名  \n![添加自定义源站域名](https://bika.picacg.download/haruki/5C3AE90E330110085424836989AC2F904D961280A441B32B909654094DCFE2B2.png)\n到dnspod解析页面，添加CNAME解析  \n需要注意的是，namesilo的dns可能需要等几十分钟才会刷新，在此之前访问域名可能是到达不了存储桶的  \n![](https://bika.picacg.download/haruki/E315A71C14F3F94218BC781296F5F37A1B1996BCEF1D797ECA20A64597AFD18F.png)\n\n# ssl证书以及防盗链设置\n在dnspod或者腾讯云域名注册界面申请免费ssl证书并下载，解压。在存储桶域名绑定页面进行证书绑定，用记事本打开Nginx里的文本并复制到对应区域\n![](https://bika.picacg.download/haruki/6B12C37D45ECE58C98F26DA67CDFC60F73ADB472ECBD37D20EFC839F64BD4A39.png)\n\n测试一下，不挂t的情况下自定义域名可以访问图片，以后的迁移只需copy文件，域名重新对应一下CNAME即可，markdown文章的图片地址不需要变动。\n![](https://bika.picacg.download/haruki/4DEED59F8DC599B65736DFA4B81C4DB1C4028557408CFBA90B1691DDDE70D6EB.png)\n\n存储桶防盗链设置如下，配置完防盗链之后本地预览和网页地址栏输入是访问不了对象存储的，只有白名单内的ip才能访问  \n![](https://bika.picacg.download/haruki/358EF065F5956500257330DDE1493957881F0BD1C0294CB5E6115CDF7805CE40.png)\n\n","tags":["对象存储"],"categories":["博客搭建"]},{"title":"云函数","url":"/2021-01-05_function-cloud.html","content":"# 前言\n[云函数简介](https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/functions.html)  \n长不看结论：总之就是跑脚本，也可以跑微信的推送等事件。目前我只用它在跑签到脚本。\n\n# server酱\n原版server酱：http://sc.ftqq.com/  \n自搭server酱：https://www.v2ex.com/t/567927\n<!-- more -->\n\n# 哔哩哔哩签到  \n项目地址：https://github.com/happy888888/BiliExp  \n油猴脚本：https://greasyfork.org/zh-CN/scripts/393096-bilibiliexp/versions  \n注意事项：云函数方式为cookie签到\n\n# 天翼云盘签到和抽奖  \n项目地址：https://github.com/FingerSword/Cloud189-Sign-In  \n注意事项：不改密码就ok  \n\n# 网易云音乐签到\n地址：https://www.coolapk.com/feed/22733317?shareKey=NjhhNGU5NTdiOWE2NWZjMWVhODI  \n注意事项：不改密码就ok  \n\n# 有道云笔记签到\n1.0：https://www.coolapk.com/feed/18049127?shareKey=MDA1OTY2ZDVkYjYyNWVmMTU5MTE  \n2.0：https://www.coolapk.com/feed/19750209?shareKey=YTM5NzM3NTFmZGIzNWZmMGY3MjM\n注意事项：均为cookie，我用qq登录的账号一天就掉了，用手机号登录的应该能管一个月","tags":["云服务"],"categories":["杂物箱"]},{"title":"域名的使用","url":"/2021-01-05_make-domainname.html","content":"# 域名服务商\n&#8195;&#8195;个人站除开com、net这两个域名，其他推荐选择国外服务商进行注册。以下仅列举一些我接触过的，还有很多其他的服务商就不一一列举了  \n* 国内\n  * [阿里云万网](https://wanwang.aliyun.com/)：尚可，只提供com和net、tv、cc这四个域名的隐藏个人信息服务\n  * [华为云domain](https://www.huaweicloud.com/product/domain.html)：在企鹅和阿里中间的位置\n  * [腾讯云dnspod](https://dnspod.cloud.tencent.com/)：我目前所有com域名都在这个上面\n  * [百度云BCD](https://cloud.baidu.com/product/bcd.html)：新用户优惠不好，域名隐私里写的和实际不符\n* 国外\n  * [GoDaddy](https://sg.godaddy.com/)：全球最大的域名服务商，当然价格就...也是贵的，隐藏个人信息还要收费\n  * [namesilo](https://www.namesilo.com/)：价格便宜，比国内的稍微贵一丢丢，所有域名均支持免费whois隐藏个人信息\n<!-- more -->\n\n# 选购指南\n&#8195;&#8195;对于正常内容的网站，.com和.net选国内的就可以了，价格比国外便宜，安全性几个顶级服务商一般不会出问题，而且这两个后缀的域名默认隐藏个人信息。  \n&#8195;&#8195;其他的域名，比如work、link、site、me...请参考各个国内服务商的域名隐私保护指南([阿里云](https://wanwang.aliyun.com/domain/whoisprotect/)、[华为云](https://support.huaweicloud.com/domain_faq/domain_faq_0002.html)、[腾讯云](https://cloud.tencent.com/document/product/242/30404)、[百度云](https://cloud.baidu.com/doc/BCD/s/bjwvym8qn))，他们是不支持非主流域名隐藏注册人姓名和注册邮箱的，根据我的实践，腾讯和阿里的top域名，百度和腾讯的xyz域名，均不支持whois隐藏，虽然ICANN和欧盟在2018年已经要求whois查询结果不再展示域名所有者、联系邮箱等信息，但有些域名服务商对于非主流域名并没有默认隐藏。  \n&#8195;&#8195;这些非主流的域名，我一般作为跳转域名用，当然也可以给小网站，出于whois查询隐私考虑，这些域名最好选择国外的，好处有很多就不多说了，至少whois查询不到注册人。  \n&#8195;&#8195;然后是国外服务商的选择，我选择的是namesilo，因为便宜且支持隐藏个人信息，无需备案就可跳转。食用方法参考：https://zhuanlan.zhihu.com/p/33921436 。跳转指定url参考：https://www.namesilo.com/Support/Domain-Forwarding 。Google邮箱注册在移动端gmail注册即可不绑定手机，最开始的手机号只为验证是否真人。\n\n价格对比1：https://www.domain265.com/  \n价格对比2: https://namebeta.com/  \nwhois查询：https://domain.163yun.com/  \nICANN更多信息：https://www.icann.org/news/announcement-2018-05-22-zh\n\n# 域名跳转指定url方案\n方案一：github仓库跳转  \n准备：一个github账号，一个域名  \n思路：域名商那里CNAME解析到你的github域名 yourname.github.io ，github仓库内CNAME写入域名并开启github page，写入一个js加载时跳转事件即可  \n```html\n <script>window.location.href = \"域名网址\"</script>\n```\n\n方案二：对象存储跳转\n准备：能开启静态网页的对象存储，一个域名  \n思路：一级域名CNAME解析到对象存储的website域名上，存储桶只存放一个index.html，之后写入JavaScript跳转即可  \n具体步骤：  \n1. 创建一个非大陆地区的公有读私有写存储桶，推荐中国香港节点。\n2. 开启存储桶的静态网站模块，并打开安全模块中的服务器端加密。\n3. 在对象存储域名管理里填写自定义源站域名，在dnspod中添加对应CNAME解析，并上传对应证书密钥到源站上。\n4. 对象存储上传一个index.html文件，写入以下代码\n```html\n <script>window.location.href = \"域名网址\"</script>\n```","categories":["博客搭建"]},{"title":"04、了解文件系统和基本操作","url":"/2020-12-22_filesystem-and-basicoperations.html","content":"\n\n# 学习目标  \n- 描述分件系统重要的组成部分\n- 复制，移动和删除文件\n- 创建文件和文件夹\n- 了解时间戳的概念\n<!--more-->\n\n# Linux文件系统的组成  \n&#8195;&#8195;整个文件系统由 分区--目录 对接  \n&#8195;&#8195;文件都是从根开始的，无论文件在哪个分区，都可以通过根访问到  \n\n- 文件和目录构成单根的倒树状结构\n- 文件系统从根目录开始，表示为一个单独的’/’(斜线)字符\n- 命名大小写敏感\n- 路径以’/’为分隔\n\n```mermaid\n\n\tgraph TD\n\tA(/)-->B1(bin)\n\tA-->B2(boot)\n\tA-->B3(dev)\n\tA-->B4(etc)\n\tA-->B5(home)\n\t\tB5-->D1(alice)\n\t\tB5-->D2(bob)\n\t\tB5-->D3(eve)\n\tA-->B6(root)\n\tA-->B7(run)\n\tA-->B8(sbin)\n\tA-->B9(tmp)\n\tA-->B10(usr)\n\t\tB10-->D4(bin)\n\t\tB10-->D5(local)\n\t\tB10-->D6(sbin)\n\t\tB10-->D7(tmp)\t\t\n\tA-->B11(var)\n\t\tB11-->D8(tmp)\n```\n\n**执行命令：ls -la；显示白色是文件，蓝色是目录**  \n\n| d    | r-xr-x---. | 15 | root | root  | 4096   | Jul  3 04:43  | .  |\n| ---- | -- | --- | --- | ------ | ---- | ----- | ------ |\n| 文件 | 权限 | 文件:链接数/目录:子目录数 | 拥有人 | 拥有组 | 文件大小（默认字节） | 最后一次修改时间 | 文件名 |\n\n# 基本目录  \n1. **/：根目录**，位于Linux文件系统目录结构的顶层，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中。 \n2. **/bin，/usr/bin：这两个目录为命令文件目录**，也称为二进制目录。包含了供系统管理员及普通用户使用的重要的linux命令和二进制（可执行）文件，包含shell解释器等。在linux 7或者更高的版本中，/bin和/usr/bin，/sbin和/usr/sbin，/lib和/usr/lib、lib64和/usr/lib64中，/中的目录是/usr/中对应目录软链接。相当于win的快捷方式 访问/bin和/usr/bin是一样的\n3. **/boot： 该目录中存放系统的内核文件和引导装载程序文件**，/boot/vmlinuz为linux的内核文件，以及/boot/gurb。一般情况下都是单独分区，分区大小200M即可。\n4. **/dev： 设备（device）文件目录**，存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，存放连接到计算机上的设备（终端、磁盘驱动器、光驱及网卡等）的对应文件，包括字符设备和块设备等，常用的是挂载光驱： **mount /dev/cdrom  /mnt。** \n5. **/etc： 系统配置文件存放的目录**，该目录存放系统的大部分配置文件和子目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11（X Window系统有关）、/etc/sysconfig（与网络有关）、/etc/xinetd.d等等，修改配置文件之前记得备份。该目录下的文件由系统管理员来使用，普通用户对大部分文件有只读权限。\n6. **/home： 系统默认的用户宿主目录**，新增用户账号时，用户的宿主目录都存放在此目录下，表示当前用户的宿主目录，test表示用户test的宿主目录。如果做文件服务器，建议单独分区，并设置较大的磁盘空间，方便用户存放数据。用户传上来的数据和其他系统文件隔离，安全性高些！\n7. **/lib，/usr/lib，/usr/local/lib：系统使用的函数库的目录**，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，该目录下存放了各种编程语言库。典型的linux系统包含了C、C++和FORTRAN语言的库文件。/lib目录下的库映像文件可以用来启动系统并执行一些命令，目录/lib/modules包含了可加载的内核模块，/lib目录存放了所有重要的库文件，其他的库文件则大部分存放在/usr/lib目录下。\n8. **/mnt，/media： mnt目录主要用来临时挂载文件系统，为某些设备提供默认挂载点，如cdrom**。这样当挂载了一个设备如光驱时，就可以通过访问目录/mnt下的文件来访问相应的光驱上的文件了。\n9. **/opt： 给主机额外安装软件所摆放的目录**。如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下。\n10. **/proc： 此目录的数据都在内存中**，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/\\*等。\n11. **/root：系统管理员root的宿主目录**，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。\n12. **/sbin，/usr/sbin，/usr/local/sbin：放置系统管理员使用的可执行命令**，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能\"查看\"而不能设置和使用。\n13. **/tmp： 一般用户或正在执行的程序临时存放文件的目录**,任何人都可以访问,重要数据不可放置在此目录下。\n14. **/srv： 服务启动之后需要访问的数据目录**，如www服务需要访问的网页数据存放在/srv/www内。\n15. **/usr： 应用程序存放目录**，/usr/bin 存放应用程序， /usr/share 存放共享数据，/usr/lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件，/usr/local 存放软件升级包，/usr/share/doc 系统说明文件存放目录。\n16. **/usr/share/man:程序说明文件存放目录**，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容，建议单独分区，设置较大的磁盘空间。\n17. **/var： 放置系统执行过程中经常变化的文件，如随时更改的日志文件** /var/log。/var/log/message： 所有的登录文件存放目录。/var/spool/mail： 邮件存放的目录。建议单独分区，设置较大的磁盘空间。\n18. **/run**：目录中存放的是自系统启动以来描述系统信息的文件\n19. **/sys**： 挂载点上挂载sysfs 虚拟文件系统，我们可以通过sysfs 文件系统访问 Linux 内核\n\n# 重要目录  \n**/etc：这个目录相当重要**，如前所述，你的开机与系统数据文件均在这个目录之下，因此当这个目录被破坏，那你的系统大概也就差不多该死掉了！而在往后的文件中，你会发现我们常常使用这个目录下的 /etc/rc.d/init.d 这个子目录，因为这个 init.d 子目录是开启一些 Linux 系统服务的 scripts 的地方。而在 /etc/rc.d/rc.local 这个文件是开机的执行档。  \n**/bin, /sbin, /usr/bin, /usr/sbin：这是系统预设的执行文件的放置目录**，例如 root 常常使用的 userconf, netconf, perl, gcc, c++ 等等的数据都放在这几个目录中，所以如果你在提示字符下找不到某个执行档时，可以在这四个目录中查一查！其中， /bin, /usr/bin 是给系统使用者使用的指令，而 /sbin, /usr/sbin 则是给系统管理员使用的指令！   \n**/usr/local：这是系统预设的让你安装你后来升级的套件的目录**。例如，当你发现有更新的 Web 套件（如 Apache ）可以安装，而你又不想以 rpm 的方式升级你的套件，则你可以将 apache 这个套件安装在 /usr/local 底下。安装在这里有个好处，因为目前大家的系统都是差不多的，所以如果你的系统要让别人接管的话，也比较容易上手！也比较容易找的到数据！因此，如果你有需要的话，通常都会将 /usr/local/bin 这个路径加到 path 中。  \n**/home：这个是系统将有账号的人口的家目录设置的地方。** 　  \n**/var：这个路径就重要了！不论是登入、各类服务的问题发生时的记录、以及常态性的服务记录等等的记录目录**，所以当你的系统有问题时，就需要来这个目录记录的文件数据中察看问题的所在！而 mail 的预设放置也是在这里，所以他是很重要的 。   \n**/usr/share/man, /usr/local/man： 这两个目录为放置各类套件说明档的地方**，例如你如果执行 man man，则系统会自动去找这两个目录下的所有说明文件。  \n\n# 一些常用文件目录  \n**用户账号文件：/etc/passwd**\n\n|字段1|字段2|字段3|字段4|字段5|字段6|字段7|\n|---|---|---|---|---|---|---|\n|user01|x:|1000:|1000:|User One:|/home/user01|/bin/bash|\n|用户名称|密码占位符“x”(表示登录该用户时需要密码，红帽8去掉也需要密码）|用户帐号的UID号| 用户的私有组|用户描述信息|用户的主目录|登录Shell信息|\n\n**密码文件：/etc/shadow**\n\n| 字段1 | 字段2 | 字段3 | 字段4 | 字段5 | 字段6 | 字段7 | 字段8 | 字段9 |\n| ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |\n|user03|\\$6\\$CSsx...output omitted...:|17933|0|99999:|7|2|18113||\n|用户帐号的名称|加密的密码字串信息|最近一次修改密码的时间，表示从1970.01.01至今的天数|密码的最短使用天数，默认值为0，没有要求|密码的最长有效天数，默认值为99999|密码即将到期警告天数，默认值为7|在密码过期之后账号保持活动的天数，指定天数后账号被锁定，成为无效|帐号失效时间，默认值为空，以1970.01.01的天数表示|保留字段（未使用）|\n\n**组信息文件：/etc/group**\n\n| 字段1 | 字段2 | 字段3 | 字段4 |\n| ----- | ----- |----- | ----- |\n|组的名称|密码占位符“x”|组的ID号|该组是user1，user2和user3的附加组|\n\n# 文件和目录名  \n&#8195;&#8195;**名字不能多于255个字符**\n&#8195;&#8195;**所有字符都要求是有效的，除斜线(/)之外**\n&#8195;&#8195;&#8195;&#8195;不要使用某些特殊的字符在文件或者目录名中\n&#8195;&#8195;&#8195;&#8195;当文件名中有特殊字符时应用引号保护引起来\n&#8195;&#8195;**命名和大小写敏感**\n&#8195;&#8195;&#8195;&#8195;例如:MAIL,Mail,mail和mAiL\n\n# 绝对路径和相对路径  \n&#8195;&#8195;**绝对路径：**  \n&#8195;&#8195;&#8195;&#8195;以根开头的路径  \n&#8195;&#8195;&#8195;&#8195;文件位置的全路径  \n&#8195;&#8195;&#8195;&#8195;在任何位置都可以引用  \n&#8195;&#8195;**相对路径：**  \n&#8195;&#8195;&#8195;&#8195;不以斜线开头  \n&#8195;&#8195;&#8195;&#8195;当前工作目录的相对位置  \n&#8195;&#8195;&#8195;&#8195;在特定的位置才可以引用\n\n\n# 管理文件和目录的基本命令  \n**ls**：显示当前目录或者指定目录下的内容  \n使用  \n&#8195;&#8195;ls [options] [files or dirs]\n示例  \n&#8195;&#8195;ls -a (包括隐藏文件)  \n&#8195;&#8195;ls -l (显示扩展信息)  \n&#8195;&#8195;ls -R(递归所有的目录)  \n&#8195;&#8195;ls -ld (显示目录和符号链接信息)\n\n**mkdir**：\n1. 命令格式  \n&#8195;&#8195;mkdir [-选项] 目录...\n2. 命令功能  \n&#8195;&#8195;通过 mkdir 命令可以实现在指定位置创建指定的文件名的文件夹。**要创建文件夹的用户必须对所创建的文件夹的父文件夹具有写权限**。并且，所创建的文件夹不能与其父目录中的已经存在文件重名，即同一个目录下不能有同名的(区分大小写)。 \n3. 命令参数  \n&#8195;&#8195; -p, --parents 可以是一个路径名称。**此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录**,即一次可以建立多个目录;   \n&#8195;&#8195;-v, --verbose 每次创建新目录都显示信息\n\n**pwd**：显示当前所在的目录的绝对路径\n\n**cd**：改变目录  \n&#8195;&#8195;改变到一个绝对或者相对路径  \n&#8195;&#8195;&#8195;&#8195;cd /home/joshua/work；cd project/docs\n&#8195;&#8195;改变到上层目录  \n&#8195;&#8195;&#8195;&#8195;cd ..  \n&#8195;&#8195;改变目录到上一个工作目录  \n&#8195;&#8195;&#8195;&#8195;cd -  \n&#8195;&#8195;改变到当前用户的主目录  \n&#8195;&#8195;&#8195;&#8195;cd 或者cd ~  \n&#8195;&#8195;改变到某个用户的主目录  \n&#8195;&#8195;&#8195;&#8195;cd  ~username\n\n**rmdir**：删除空目录\n\n**cp**：命令主要用于复制文件或目录  \n&#8195;&#8195; cp [options] source... directory  \n&#8195;&#8195; -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。  \n&#8195;&#8195; -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。\n\n**mv**:命令用来为文件或目录改名、或将文件或目录移入其它位置。  \n&#8195;&#8195; mv source... directory\n\n**rm**：命令用于删除一个文件或者目录。  \n&#8195;&#8195; rm [options] name...  \n&#8195;&#8195; -f 即使文件属性设为只读，也直接删除，无需逐一确认。  \n&#8195;&#8195; -r 将目录及以下之文件一起删除。  \n&#8195;&#8195; rm -rf * 删除当前目录下的所有文件及目录\n\n**touch**：命令用于修改文件或者目录的时间属性。若文件不存在，系统会建立一个新的文件。  \n&#8195;&#8195;命令格式：touch 文件名\n\n**cat**：命令用显示文件内容。\n\n**命令格式**：cat [-选项] 文件  \n&#8195;&#8195;加参数：-n 或 --number：由 1 开始对所有输出的行数编号。\n\n**more**：命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示  \n&#8195;&#8195;Enter：向下n行，需要定义。默认为1行  \n&#8195;&#8195;空格键：向下滚动一屏  \n&#8195;&#8195;q：退出more\n\n**less**：工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。  \n1. 命令格式\n&#8195;&#8195;less [-选项] 文件 \n2. 命令功能\n&#8195;&#8195;less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。  \n/字符串：  \n&#8195;&#8195;向下搜索“字符串”的功能  \n?字符串：  \n&#8195;&#8195;向上搜索“字符串”的功能  \nn：  \n&#8195;&#8195;重复前一个搜索（与 / 或 ? 有关），next  \nN：  \n&#8195;&#8195;反向重复前一个搜索（与 / 或 ? 有关）  \nQ：  \n&#8195;&#8195;退出less 命令  \nEnter：  \n&#8195;&#8195;向下n行，需要定义。默认为1行  \n空格键：  \n&#8195;&#8195;向下滚动一屏  \nb键：  \n&#8195;&#8195;向上滚动一屏  \npagedown：   \n&#8195;&#8195;向下翻动一行  \npageup：  \n&#8195;&#8195;向上翻动一行  \n\n**head**：用来显示档案的开头至标准输出中。如果指定了多于一个文件，在每一段输出前会给出文件名作为文件头。  \n&#8195;&#8195;head -n 5 log.txt ；说明：显示文件的前n行\n\n**tail**：命令用途是依照要求将指定的文件的最后部分输出  \n1. tail filename\n&#8195;&#8195;说明：显示filename最后10行。\n2. tail -F filename\n&#8195;&#8195;说明：动态监视filename文件的尾部内容（默认10行，相当于增加参数 -n 10），刷新显示在屏幕上。退出，按下CTRL+C。\n3. tail -n 20 filename\n&#8195;&#8195;说明：显示filename最后20行。\n\n**file查看文件类型**：查看文件类型  \n文件可以包含许多类型的数据  \n在文件打开之前先检查文件类型，然后再确定使用适当的命令或者应用程序  \n&#8195;&#8195;file [options] <filename>…\n\n**tree**：可以查看当前目录下的所有子目录和文件结构\n\n# 单元小结  \n- Linux 文件系统层次结构\n- 命令行文件管理工具\n- 时间戳\n","tags":["linux","rhel8","待补充"],"categories":["linux for rhel8"]},{"title":"hexo-next7食用方法","url":"/2020-12-21_use-hexo-next7.html","content":"# 博客启用（前略环境搭建）\n&#8195;&#8195;新建文件夹，之后在其中执行：hexo init。\n&#8195;&#8195;hexo-next7官方git：https://github.com/theme-next/hexo-theme-next\n&#8195;&#8195;hexo-next8官方git：https://github.com/next-theme/hexo-theme-next\n&#8195;&#8195;git配置：npm install --save hexo-deployer-git；多用户指定其一：githubgit config --global user.email \"邮箱\"和git config --global user.name \"用户名\"\n<!-- more -->\n\n\n# 可能会用到的工具\n\n&#8195;&#8195;RSS订阅：npm install hexo-generator-feed；  \n参考：https://blog.csdn.net/qq_36537546/article/details/90730068  \n&#8195;&#8195;站点地图：npm install hexo-generator-sitemap --save；  \n参考：https://www.cnblogs.com/brady-wang/p/8493181.html  \n&#8195;&#8195;next7的搜索功能：npm install hexo-generator-searchdb --save；  \n参考：https://blog.csdn.net/qq_41086511/article/details/103537522  \n&#8195;&#8195;背景图片及透明度调整：\\themes\\next-7.7.2\\source\\css\\_common\\components\\pages\\pages.styl，能找到此页面样式文件的均可。  \n参考：https://blog.csdn.net/Louis_li51/article/details/105227430；  \n注：带搜索框后不能开启菜单栏和搜索栏的透明度，否则会透明度过高看不清，但可以给头像的框加透明度。   \n&#8195;&#8195;next7单独友链参考：https://blog.csdn.net/Aoman_Hao/article/details/103758829  \n&#8195;&#8195;文章置顶：node_modules/hexo-generator-index/lib/generator；\n参考：https://www.jianshu.com/p/42a4efcdf8d7  \n&#8195;&#8195;图片压缩工具：https://tinypng.com/ 或者https://docsmall.com/image-compress  \n&#8195;&#8195;图片批量重命名工具（可为图片hash值）：[ReNamer](https://renamer.en.softonic.com/)  ","tags":["tools"],"categories":["博客搭建"]},{"title":"03、运行命令和获取帮助","url":"/2020-12-12_command-and-help.html","content":"\n# 学习目标  \n- 在提示符下执行命令\n- 掌握命令的语法\n- 学习使用一些简单命令\n- 学会使用系统内部的一些帮助\n- 学会使用red hat的在线文档\n<!-- more -->\n\n# 命令的语法  \n&#8195;&#8195;command options arguments   \n- 项与项之间以空格分隔开\n- options修饰一个命令的行为\n\t- 单个字母作为选项前一般都带有-,例如-a,-b,-c或者-abc\n\t- 单词作为选项前通常带有--,例如:--help\n- 参数是一个文件名目录或者具体的某个对象\n- 多个命令用;分隔 \n\n| 命令      | 选项         | 参数            |\n| -------------- | -------------- | --------------- |\n| 做什么，如：passwd、ls、id | 修饰命令的行为（功能），如：-a、-l、-la | 具体的某个对象 |\n\n# 获取帮助  \n&#8195;&#8195;不要去尝试记住一切，不同级别的帮助资源： whatis、 command --help、 man、pinfo、 /usr/share/doc、 红帽官方产品文档 \n\n**whatis命令**  \n- 显示命令的简短描述\n- 基于数据库的查询，定时更新\n- 在安装完后并不能马上使用\n\n**--help命令**  \n- 列出命令常用的语法和参数\n- 大部分命令支持该选项\n- 特殊符号解读\n\t- 在[]中的参数是可选的\n\t- 大写的参数或者在<>中都表示变量\n\t- 文本后面跟随…表示一个列表\n\t- x|y|z表示”x 或者y或者z”\n\t* -abc表示”任意-a,-b或者-c的任意组合”\n- 例如：date --help\n\n**man使用方法：**  \n   man -k 关键字\n   man [章节信息] 命令或者配置文件 \n\n| 命令            | 结果                       |\n| --------------- | -------------------------- |\n| 空格键          | 向下翻页                   |\n| PageUp/PageDown | 向上向下翻页               |\n| g/G             | 回到开头/末尾              |\n| /string         | 搜索string关键词           |\n| n/N             | 在关键词之间向下和向上查找 |\n| q               | 退出man帮助页面            |\n\n**帮助手册（manual）**  \n&#8195;&#8195;位置：/usr/share/man/；man手册标准章节，常用选项：1、用户命令；5、文件格式；8、系统管理命令 \n\n| 章节 | Ecglish               | 中文                 |\n| :---:| --------------------- | ------------------------------ |\n| 1    | User commands         | 用户命令                           |\n| 2    | System calls          | 系统调用库                  |\n| 3    | Library functions     | 库函数                          |\n| 4    | Special files         | 特殊文件                        |\n| 5    | File formats          | 文件格式                           |\n| 6    | Games                 | 游戏                          |\n| 7    | Conventions           | 约定                          |\n| 8    | Manintenance commands | 系统管理命令（一般只有root能执行的命令） |\n| 9    | Linux Kernel API      | Linux内核 API                |\n\n**pinfo帮助文档**   \n- 文档结构由超链接式的 info 节点组成，记录了很多复杂命令和概念说明\n- 在 RHEL 中可以使用 info 和 pinfo 两个命令浏览 info page \n\n| 命令操作          | 结果                        |\n| ------------------ | --------------------------- |\n| PageUp或者b        | 向上滚动一个屏幕            |\n| PageDown或者空格键 | 向下滚动一个屏幕            |\n| d                  | 显示主题目录                |\n| u                  | 显示主题的父节点            |\n| 向上/向下箭头键    | 向上/向下滚动到下一个超链接 |\n| enter键            | 打开光标处的主题            |\n| q                  | 打开光标处的主题            |\n\n**RPM包文档**  \n&#8195;&#8195;本地帮助文档\n&#8195;&#8195;安装软件包后，在doc目录下释放文档\n&#8195;&#8195;/usr/share/doc/packagename\n&#8195;&#8195;可使用浏览器查看\n\n**redhat在线文档**  \n&#8195;&#8195;红帽官方文档 https://access.redhat.com\n\n# 单元小结  \n- 命令的语法规则\n- man帮助使用\n- 系统内其他帮助资源\n- 红帽在线文档查阅","tags":["linux","rhel8"],"categories":["linux for rhel8"]},{"title":"02、Linux的基本使用","url":"/2020-12-12_how-to-use-linux.html","content":"\n# 学习目标  \n- 登录Red Hat Enterprise Linux系统\n- 从控制台启动图形\n- 执行简单的linux命令\n- 编辑纯文本文件\n- 掌握root特性\n<!-- more -->\n\n# 简单的命令\n\n| 命令    | 功能             |\n| ------- | ---------------- |\n| date    | 显示日期         |\n| cal     | 显示日历         |\n| passwd  | 修改密码         |\n| id      | 显示当前用户信息 |\n| useradd | 创建用户         |\n| su -    | 切换用户         |\n| vim     | 文本编辑器的使用 |\n\n# 历史记录（history）\n\n| 操作      | 功能                           |\n| --------- | ------------------------------ |\n| History   | 查看所有历史记录               |\n| history N | 列出最近的N条历史记录          |\n| !N        | 调用第N条历史记录              |\n| !string   | 调用最近一条以string开头的命令 |\n| !$        | 调用最后一条命令               |\n| 上下键    | 查找历史记录                   |\n| Ctrl+r    | 搜索历史记录                   |\n| Alt+.     | 调用上一条命令的最后一个参数   |\n| Esc+.     | 调用上一条命令的最后一个参数   |\n\n# 图形界面\n\n&#8195;&#8195;如果最开始没有装GUI图形界面，还需要装X-window，有两种桌面工具 GNOME和KDE  \n&#8195;&#8195;控制台（以前）：键盘、鼠标、显示器等硬件  \n&#8195;&#8195;控制台（现在）：即命令行、图形界面等操作界面\n\n- 典型的Linux系统运行5个虚拟控制台和1个图形控制台\n- 按CTRL-ALT-F1键可进入图形控制台\n- 使用CTRL-ALT-F[2-6]键可切换不同虚拟控制台\n- 在虚拟控制台执行startx可以运行图形，前提是装了图形界面（startx没有切换控制台，只是在当前\n- 控制台开启了图形应用程序）\n\n# gnome-terminal桌面工具\n\n| 操作            | 功能        |\n| --------------- | ---------------- |\n| Ctrl-Shift-t    | 创建标签页       |\n| Ctrl-PgUp/PgDn  | 在标签页之间切换 |\n| Alt+[123...]    | 在标签页之间切换 |\n| Ctrl-Shift-c    | 复制已选内容     |\n| Ctrl-Shift-v    | 粘贴复制的内容   |\n| Shift-PgUp/PgDn | 在标签页上下滚动 |\n| Ctrl+l          | 清屏             |\n| Ctrl+Shift++    | 放大\t|\n| Ctrl+-          | 缩小\t|\n\n# 单元小结  \n- 登录操作系统\n- 掌握桌面图形工具的使用\n- root用户的本质\n- 一些简单命令的执行\n- tab的使用\n- 历史记录的调用","tags":["linux","rhel8"],"categories":["linux for rhel8"]},{"title":"01、Linux的简介和安装","url":"/2020-12-12_linux-synopsis-install.html","content":"\n\n# 学习目标  \n- Linux系统和红帽认证的基本介绍\n- RHEL8.0系统的安装\n- 掌握开源软件的本质\n- 探讨linux的起源\n- Red Hat操作系统的发行版\n- 其他Linux系统的发行版\n- 了解linux的基本原理\n<!-- more -->\n\n# linux系统安装  \n&#8195;&#8195;CentOS下载：https://www.centos.org/download/  \n&#8195;&#8195;DVD ISO：标准安装版，一般下载这个就可以了（推荐）  \n&#8195;&#8195;Everything ISO：对完整版安装盘的软件进行补充，集成所有软件。（包含一套完整的软件包，可以用来安装系统或者填充本地镜像）  \n&#8195;&#8195;Minimal ISO：迷你版，小巧、安装快速、自带的软件少  \n&#8195;&#8195;CentOS所有历史版本的下载地址：http://archive.kernel.org/centos-vault/\n&#8195;&#8195;[rhel8安装手册](https://www.lofter.com/lpost/4ba01091_1cabbd565)\n\n# 什么是操作系统？  \n&#8195;&#8195;操作系统，英文名称Operating System，简称OS，是计算机系统中必不可少的基础系统软件，它是应用程序运行以及用户操作必备的基础环境支撑，是计算机系统的核心。  \n\n![](https://bika.picacg.download/haruki/96F0C320ADD182842FBA7D0D28146A5183660388D3149919CAB5C0163FAC9C5A.png  \"操作系统与计算机硬件软件关系\")\n\n# 什么是Linux？  \n&#8195;&#8195;和Windows操作系统软件一样，Linux也是一个操作系统软件。  \n&#8195;&#8195;Linux内核最初只是由芬兰人李纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。  \n&#8195;&#8195;Linux是一套免费使用和自由传播的，是一个基于POSIX（POSIX表示可移植操作系统接口，是个标准）的多用户、多任务、支持多线程和多CPU的操作系统。 \n\n**Linux的内核版本和发行版本**  \n&#8195;&#8195;内核版本下载地址：https://www.kernel.org/ ，只有99M多一点是Linux操作系统的真正的核心。  \n&#8195;&#8195;Linux的发行版说简单点就是将Linux内核与应用软件做一个打包。  \n&#8195;&#8195;目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、TurboLinux、BluePoint、RedFlag、Xterm、SlackWare等很多很多，发行版本可能有上千种之多，各个发行版本之间的主要区别就是安装软件的方式可能不同，其他主要的操作命令啊什么的基本雷同，因为都是一个内核。  \n\n**Linux应用领域**  \n&#8195;&#8195;物联网、云计算、大数据使用的嵌入式、c++、JAVA、PHP等底层应用软件都是在Linux操作系统上,各种场合都有使用各种Linux发行版，通常服务器使用Linux，未来国产化服务器都是安装的Linux操作系统。\n\n**Linux发展史**  \n- **1984年**，Richard Stallman发起了GNU源代码开放计划并制定了著名的GPL许可协议。\n- **1987年**，GNU计划获得了一项重大突破—gcc编译器发布\n- **1991年10月**，芬兰赫尔辛基大学的在校生Linus Torvalds编写了一款名为Linux的操作系统。该系统因其较高的代码质量且基于GNU GPL许可协议的开放源代码特性，迅速得到了GNU计划和一大批黑客程序员的支持。\n- **1994年1月**，Bob Young在Linux系统内核的基础之上，集成了众多的源代码和程序软件，发布了红帽系统并开始出售技术服务，这进一步推动了Linux系统的普及。\n- **2020年3月**，Linux内核已经发展到了5.6版本，并且Linux系统版本也有数百个之多，但它们依然都使用Linus Torvalds开发、维护的Linux系统内核。RedHat公司也成为了开源行业及Linux系统的带头公司\n\n**发展历程**  \n- **Unix**：1970年1月1日 贝尔实验室 开源→闭源，Richard Stallman发起了GNU：GNU is not unix 计划 开源\n- **Linux**：1991年 unix架构 最早为内核kernel 控制硬件，硬件←→kernel←→应用程序，1991年 内核 1.0v版本—5.6v版本 红帽是外层操作系统  GNU/Linux\n\n**红帽发行版本**  \n&#8195;&#8195;Linux分发是基于linux内核的操作系统  \n- **Red Hat Enterprise Linux**（红帽企业版 Linux） 企业版\n\t* 应用程序和功能更稳定\n\t* 有专业的技术支持服务\n- **Fedora**（费多拉） 桌面 个人 图形界面 功能新 不稳定应用更多，功能更新\n\t* 社区支持(不提供Red Hat官方支持)\n\t* 针对个人的操作系统\n- **Centos**（社区企业操作系统） community ent：enterprise os 社区企业版 没有服务 需要运维人员\n\t* 社区企业操作系统\n\t* 基于Red Hat Enterprise Linux开发\n\t* 完全免费，但不提供任何商业支持\n\n**红帽公司**  \n- 红帽RedHat：开源界的领导者 纯软件公司  但2019年被IBM收购了\n- IBM：闭源 硬件——软件一体 自身兼容性好 云\n\n# 什么是开源软件？  \n&#8195;&#8195;开源软件：软件的源代码共享给所有人\n\n**自由软件基金会定义了四大自由：**  \n- 允许以任何目的运行软件\n- 允许学习和修改软件的源代码\n- 允许重新发布软件\n- 允许开发软件的衍生版本\n\n**开源软件对比闭源软件的优势**  \n- **低风险**：使用闭源软件无疑把命运交付给他人，一旦封闭的源代码没有人来维护，你将进退维谷；而且相较于商业软件公司，开源社区很少存在倒闭的问题。\n- **低成本**：开源工作者都是在幕后默默且无偿地付出劳动成果，为美好的世界贡献一份力量，因此使用开源社区推动的软件项目可以节省大量的人力、物力和财力。\n- **高品质**：相较于闭源软件产品，开源项目通常是由开源社区来研发及维护的，参与编写、维护、测试的用户量众多，bug修复及时。\n- **更透明**：没有哪个会把木马、后门等放到开放的源代码中，这样无疑是把自己的罪行暴露在阳光之下。\n\n# Linux基本准则  \n- 一切都是文件(包括硬件)\n- 小而功能单一的应用程序\n- 组合多个程序一起执行复杂的任务\n- 跟用户操作界面无关\n- 以文本文件形式保存配置数据\n\n# 单元小结  \n- RHEL8.0系统安装\n- 开源软件\n- Linux的起源\n- 红帽的各个发行版\n- Linux的基本原则","tags":["linux","rhel8"],"categories":["linux for rhel8"]},{"title":"博客搭建","url":"/2020-12-07_blog-make.html","content":"\n# 前言\n\n&#8195;&#8195;搭建这个博客之前，看了许多其他很好的博客，大多是hexo，因为方便，在github上部署，用来免费存放，或者在云服务器上部署。前者受限于github众所周知的原因，访问并不理想，还不算上大文件。后者每年有服务器开销，资源日积月累导致存储的增长，还是上个“免费的云”吧。\n<!-- more -->\n\n&#8195;&#8195;最开始使用的是lofter来记东西，它作为一个移动端的亚文化社区博客，对于技术文档的兼容并不好，但是作为一个时间流，记录多图或者短文非常棒，而且支持创建多个子博客，互不干扰，独立子域名。\n\n&#8195;&#8195;之后就是寻找长文章合集的博客，首先想到的是CSDN，写bug时百度到最多的就是它，侧边全是广告和不知名的链接，pass。下一个，简书，因为简书自身带有头条或者豆瓣这种生活类资讯信息服务，侧边栏也还是有推荐，下一个，继续找，然而国内博客基本都被微博取代了，有看到说用qq空间做博客的，确实企鹅家大业大，不会一下子无了，但写博客，还是想分享的，所以再找找吧，翻协同办公的软件，墨刀、石墨文档、钉钉、腾讯文档....\n\n\n&#8195;&#8195;最后看见一个语雀，查下背景阿里的，那可以了，虽然上限只有10G上传流量，但后期可以买，再之后是它的功能，有博客、协同办公等，目前界面没有广告，UI也不错，和lofter一样可以自定义多个子域名进行分类，所以选择了它作为长文章和项目合集的存放地，接着就是做个导航页把他俩适配一下再上”云“就可以了。\n\n# [导航](https://haruki3014.top)：github+hexo\n\n&#8195;&#8195;导航就是这个网站，方法是在哔哩上找的，[link点这里](https://www.bilibili.com/video/BV1je41147Ma)，先按照他的方法把hexo本地环境和github的仓库搭建好，然后就是找一个简洁主题做导航就行了。\n\n# [短文](https://haruki3014.lofter.com/)：lofter\n\n&#8195;&#8195;lofter不支持外链，搜索引擎不收录，发布资源会审核，但对于图片的保存很好，应该是原图，背后是网易，作为一个记录日常遇见的技术问题的保存和分类整理，可以做的很好，还有很多模板可选，各个子博客可选相互独立或者link。\n\n# [合集](https://www.yuque.com/haruki3014)：语雀\n\n&#8195;&#8195;支持markdown的导入和导出 ，所有文档在云端，可以链接外链，是可靠性的保障。\n\n# 文档：markdown+Tyora\n\n&#8195;&#8195;[阿里图床点这里](https://zhuanlan.zhihu.com/p/138878534)\n\n&#8195;&#8195;文档是笔记、博客的基础。markdown我是搭建博客时才了解的，后来一想，既然这么方便就多软件链接一下，多备份，文档所需要的图也不多，对象存储还算便宜，当然也可以不用付费用免费图床，后果就是图片可靠性降低。\n\n&#8195;&#8195;首先用Tyora编写文档，之后根据自己喜好，上传到github的博客或云同步，markdown文档可以同步到有道云笔记、印象笔记和语雀，这三者的的免费容量足够我们日常的文档编写，图片存放对象存储里，三个厂商保证你的文档文字安全，一个对象存储保障图片安全。\n\n# 后记\n\n&#8195;&#8195;总的来说，对于一个极其注重数据可靠性的我，该方案唯一缺点就是图床，markdown文档需要的图片链接，一旦图床和某厂商绑定，之后需要迁移时，大量的命名就会非常麻烦，费用我又去看了下分三类，累计多了，也许不便。虽如此，Tyora的记录和云同步的文字可靠性确实极高，阅读也比word的体验更好，还是很好的。\n\n&#8195;&#8195;根据实践的方案，免费图床上传图片后没有二级域名，生成的图片链接最后是随机字符，而阿里云和腾讯云的付费对象存储可行，上传文件时，只要不是中文（包括但不限于字符），online文件名称就会和源文件名称一致，生成的链接也会是以原名称结尾，为中文或带有中文字符时，中文部分会被转译为其他编码，且阿里云和腾讯云的中文转码后名称相同，对于上传文件的重命名，可以使用ReNamer这个软件，在规则中插入图片的hash256并批量替换原名称。迁移时先从对象存储中下载所有图片保存本地，然后上传到迁移的对象服务器上，之后本地的markdown丢linux上用替换前缀即可，云同步中，印象笔记和语雀是支持文本替换的，有道云笔记是不支持的。至此，可以说markdown记笔记和写博客，配合lofter短文本，是一个可靠性极高，日常使用只需付费对象存储的费用，就能体验多端同步，多人浏览，极速分享的云服务。\n\n\n\n","categories":["博客搭建"]}]